survive.M0 <- data.frame (larval.data.M0$Chamber.num, larval.data.M0$Timepoint, larval.data.M0$Origin, larval.data.M0$Secondary, proportion.alive.M0, proportion.dead.M0, larval.data.M0$Alive, larval.data.M0$Dead) #make dataframe
colnames(survive.M0) <- c("Chamber", "Timepoint", "Origin", "Secondary", "Prop.Alive","Prop.Dead", "Alive","Dead") #rename columns
mean.survive.M0 <- aggregate(Prop.Alive ~ Origin * Secondary, data = survive.M0, FUN= "mean") #calculate mean by origin and secondary treatments
se.survive.M0 <- aggregate(Prop.Alive ~ Origin * Secondary, data = survive.M0, FUN= "std.error")  #calculate se by origin and secondary treatments
n.survive.M0 <- aggregate(Prop.Alive ~ Origin * Secondary, data = survive.M0, FUN= "length")  #calculate sample size by origin and secondary treatments
survivorship.M0 <- cbind(mean.survive.M0,se.survive.M0$Prop.Alive) #combine data
colnames(survivorship.M0) <- c("Origin", "Secondary", "mean", "se") #rename columns
#descriptive stats
(survivorship.M0[2,3]-survivorship.M0[1,3])/survivorship.M0[1,3] #percent change between treatments
(survivorship.M0[4,3]-survivorship.M0[3,3])/survivorship.M0[3,3] #percent change between treatments
mean.surs <- aggregate(Prop.Alive ~ Secondary, data = survive.M0, FUN= "mean") #calculate mean by secondary treatment
(mean.surs[1,2]-mean.surs[2,2])/mean.surs[1,2] #percent change between secondary treatments
Fig26 <- ggplot(data=survivorship.M0, aes(x=Secondary, y=mean, group=Origin, colour=Origin, shape=Origin)) + #plot data
geom_line(size=0.7, position=position_dodge(.1)) + #plot lines
scale_colour_manual(values=c("gray", "black")) + #set line color
geom_point(size=4, position=position_dodge(.1), colour="black") + #set point characteristics
scale_shape_manual(values=c(1,18)) + #set shapes
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), #plot error bars
width=0, position=position_dodge(.1), colour="black") + #set error bar characteristics
ggtitle("(a) CHAMBER") + #plot title
annotate("text", x = 0.87, y = 0.82, label = "a") + #add posthoc letters
annotate("text", x = 0.85, y = 0.74, label = "ab") + #add posthoc letters
annotate("text", x = 2.2, y = 0.59, label = "bc") + #add posthoc letters
annotate("text", x = 2.15, y = 0.51, label = "cd") + #add posthoc letters
xlab("Treatment of Offspring") + #plot x axis label
ylab("Survivorship") + #plot y axis label
ylim(0,1) + #Y axis limits
theme_bw() + #theme black and white
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.text=element_text(size=16), #set text size
axis.ticks.length=unit(-0.2, "cm"), #turn ticks inward
axis.text.y = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm")), #set margins on labels
axis.text.x = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm"), vjust = 0.5), #set margins on labels
axis.title=element_text(size=18,face="bold"), #set axis title text size
axis.title.x=element_blank(), #remove x axis label
strip.text.x = element_text(size = 16, colour = "black", face="bold"),
axis.line.x = element_line(color = 'black'), #Set the axes color
axis.line.y = element_line(color = 'black'), #Set the axes color
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(),  #Set the plot background
legend.key = element_blank(),  #remove legend background
legend.position="none",  #set legend location
panel.border=element_rect(size=1.25, fill = NA), #set outer border
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0)) #set title attributes
Fig26 #view plot
#Month1
larval.data.M1 <- read.csv("Larval_Data_M1.csv", header=T, sep=",", na.string="NA", as.is=T) #load data
proportion.alive.M1 <- larval.data.M1$month1/larval.data.M1$larvae.added #calculate survivorship
proportion.dead.M1 <- 1-proportion.alive.M1 #calculate mortality
larval.data.M1$Alive <- larval.data.M1$month1 #count alive
larval.data.M1$Dead <- larval.data.M1$larvae.added-larval.data.M1$month1 #calculate dead
survive.M1 <- data.frame (larval.data.M1$Chamber.num, larval.data.M1$Timepoint, larval.data.M1$Origin, larval.data.M1$Secondary, proportion.alive.M1, proportion.dead.M1, larval.data.M1$Alive, larval.data.M1$Dead) #make dataframe
colnames(survive.M1) <- c("Chamber", "Timepoint", "Origin", "Secondary", "Prop.Alive","Prop.Dead", "Alive","Dead") #rename columns
survive.M1$Timepoint <- "Time2"
mean.survive.M1 <- aggregate(Prop.Alive ~ Origin + Secondary, data = survive.M1, FUN= "mean") #calculate mean by origin and secondary treatments
se.survive.M1 <- aggregate(Prop.Alive ~ Origin + Secondary, data = survive.M1, FUN= "std.error") #calculate se by origin and secondary treatments
n.survive.M1 <- aggregate(Prop.Alive ~ Origin * Secondary, data = survive.M1, FUN= "length")  #calculate sample size by origin and secondary treatments
survivorship.M1 <- cbind(mean.survive.M1,se.survive.M1$Prop.Alive) #combine data
colnames(survivorship.M1) <- c("Origin", "Secondary", "mean", "se") #rename columns
#descriptive stats
(survivorship.M1[2,3]-survivorship.M1[1,3])/survivorship.M1[1,3] #percent change between treatments
(survivorship.M1[4,3]-survivorship.M1[3,3])/survivorship.M1[3,3] #percent change between treatments
mean.surs.m1 <- aggregate(Prop.Alive ~ Secondary, data = survive.M1, FUN= "mean") #calculate mean by secondary treatment
(mean.surs.m1[1,2]-mean.surs.m1[2,2])/mean.surs.m1[1,2] #percent change between secondary treatments
Fig27 <- ggplot(data=survivorship.M1, aes(x=Secondary, y=mean, group=Origin, colour=Origin, shape=Origin)) + #plot data
geom_line(size=0.7, position=position_dodge(.1)) + #plot lines
scale_colour_manual(values=c("gray", "black")) + #set line color
geom_point(size=4, position=position_dodge(.1), colour="black") + #set point characteristics
scale_shape_manual(values=c(1,18)) + #set shapes
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), #plot error bars
width=0, position=position_dodge(.1), colour="black") + #set error bar characteristics
ggtitle("(b) MONTH 1") + #plot title
annotate("text", x = 0.87, y = 0.52, label = "cd") + #add posthoc letters
annotate("text", x = 0.83, y = 0.42, label = "de") + #add posthoc letters
annotate("text", x = 2.2, y = 0.37, label = "de") + #add posthoc letters
annotate("text", x = 2.15, y = 0.30, label = "e") + #add posthoc letters
xlab("Treatment of Offspring") + #plot x axis label
ylab("Survivorship") + #plot y axis label
ylim(0,1) + #Y axis limits
theme_bw() + #theme black and white
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.text=element_text(size=16), #set text size
axis.ticks.length=unit(-0.2, "cm"), #turn ticks inward
axis.text.y = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm")), #set margins on labels
axis.text.x = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm"), vjust = 0.5), #set margins on labels
axis.title=element_text(size=18,face="bold"), #set axis title text size
axis.title.x=element_blank(), #remove x axis label
strip.text.x = element_text(size = 16, colour = "black", face="bold"),
axis.line.x = element_line(color = 'black'), #Set the axes color
axis.line.y = element_line(color = 'black'), #Set the axes color
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(),  #Set the plot background
legend.key = element_blank(),  #remove legend background
legend.position="none",  #set legend location
panel.border=element_rect(size=1.25, fill = NA), #set outer border
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0)) #set title attributes
Fig27
#Month6
proportion.alive.M6 <- larval.data.M1$month6/larval.data.M1$larvae.added #claculate survival
proportion.dead.M6 <- 1-proportion.alive.M6 # calculate mortality
survive.M6 <- data.frame (larval.data.M1$Chamber.num, larval.data.M1$Timepoint, larval.data.M1$Origin, larval.data.M1$Secondary, proportion.alive.M6, proportion.dead.M6) #make dataframe
colnames(survive.M6) <- c("Chamber", "Timepoint", "Origin", "Secondary", "Prop.Alive","Prop.Dead") #rename columns
survive.M6$Timepoint <- "Time3" #identify timepoint
survive.M6$Alive <- larval.data.M1$month6 #count alive
survive.M6$Dead <- larval.data.M1$larvae.added-larval.data.M1$month6 #calculate dead
mean.survive.M6 <- aggregate(Prop.Alive ~ Origin + Secondary, data = survive.M6, FUN= "mean") #calculate mean
se.survive.M6 <- aggregate(Prop.Alive ~ Origin + Secondary, data = survive.M6, FUN= "std.error") #calculate SEM
n.survive.M6 <- aggregate(Prop.Alive ~ Origin * Secondary, data = survive.M6, FUN= "length")  #calculate sample size by origin and secondary treatments
survivorship.M6 <- cbind(mean.survive.M6,se.survive.M6$Prop.Alive) #combine descriptive statistics
colnames(survivorship.M6) <- c("Origin", "Secondary", "mean", "se") #rename columns
#descriptive stats
(survivorship.M6[2,3]-survivorship.M6[1,3])/survivorship.M6[1,3] #percent change between treatments
(survivorship.M6[4,3]-survivorship.M6[3,3])/survivorship.M6[3,3] #percent change between treatments
mean.surs.m6 <- aggregate(Prop.Alive ~ Secondary, data = survive.M6, FUN= "mean") #calculate mean by secondary treatment
(mean.surs.m6[1,2]-mean.surs.m6[2,2])/mean.surs.m6[1,2] #percent change between secondary treatments
Fig28 <- ggplot(data=survivorship.M6, aes(x=Secondary, y=mean, group=Origin, colour=Origin, shape=Origin)) + #plot data
geom_line(size=0.7, position=position_dodge(.1)) + #plot lines
scale_colour_manual(values=c("gray", "black"), labels=c("Ambient Parental Envt.", "High Parental Envt.")) + #set line color
geom_point(size=4, position=position_dodge(.1), colour="black") + #set point characteristics
scale_shape_manual(values=c(1,18), labels=c("Ambient Parental Envt.", "High Parental Envt.")) + #set shapes
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), #plot error bars
width=0, position=position_dodge(.1), colour="black") + #set error bar characteristics
ggtitle("(c) MONTH 6") + #plot title
annotate("text", x = 0.90, y = 0.19, label = "f") + #add posthoc letters
annotate("text", x = 0.82, y = 0.12, label = "f") + #add posthoc letters
annotate("text", x = 2.13, y = 0.06, label = "g") + #add posthoc letters
annotate("text", x = 1.87, y = 0.0005, label = "fg") + #add posthoc letters
xlab("Treatment of Offspring") + #plot x axis label
ylab("Survivorship") + #plot y axis label
ylim(0,1) + #Y axis limits
theme_bw() + #theme black and white
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.text=element_text(size=16), #set text size
axis.ticks.length=unit(-0.2, "cm"), #turn ticks inward
axis.text.y = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm")), #set margins on labels
axis.text.x = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm"), vjust = 0.5), #set margins on labels
axis.title=element_text(size=18,face="bold"), #set axis title text size
axis.title.x=element_blank(), #remove x axis label
strip.text.x = element_text(size = 16, colour = "black", face="bold"),
axis.line.x = element_line(color = 'black'), #Set the axes color
axis.line.y = element_line(color = 'black'), #Set the axes color
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(),  #Set the plot background
legend.key = element_blank(),  #remove legend background
legend.position=c(0.6,0.7),  #set legend location
panel.border=element_rect(size=1.25, fill = NA), #set outer border
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0)) #set title attributes
Fig28
# #Repeated Measures Survivorship Origin = Fixed, Secondary = Fixed, Timepoint = Fixed, Chamber = Random repeated measure
All.Survivorship <- rbind(survive.M0, survive.M1, survive.M6) #combine data
#Binomial GLM
# Wald-test with H0 = 0
sur.GLM <-  glmer(cbind(Alive, Dead) ~ Origin*Secondary*Timepoint +(1|Chamber/Timepoint), data=All.Survivorship, family="binomial", na.action = "na.fail") #repeated measures ANOVA
summary(sur.GLM) #view summary
sur.mods <- dredge(sur.GLM) #describe model selection
sur.mods
sur.GLM <-  glmer(cbind(Alive, Dead) ~ Origin+Secondary+Timepoint + Secondary*Timepoint +(1|Chamber/Timepoint), data=All.Survivorship, family="binomial", na.action = "na.fail") #select best model for repeated measures ANOVA
Anova(sur.GLM) #view ANOVA table
Sur.Results <- Anova(sur.GLM) #view summary
dispersion_glmer(sur.GLM) #check for over dispersion
sur.resid <-resid(sur.GLM) #extract residuals
sur.shapiro <- shapiro.test(sur.resid) #runs a normality test using shapiro-wilk test on the residuals
sur.shapiro #view results
sur.qqnorm <- qqnorm(sur.resid) # normal quantile plot
sur.qqline <- qqline(sur.resid) # adding a qline of comparison
hist(sur.resid) #plot histogram of residuals
boxplot(sur.resid~ All.Survivorship$Origin * All.Survivorship$Secondary* All.Survivorship$Timepoint, ylab = "residuals", las = 2, par(mar = c(12, 5, 4, 2)+ 0.1)) #view Origin variability
#posthoc results
sur.GLM.posthoc <- summary(glht(sur.GLM, lsm(pairwise~Origin+Secondary+Timepoint)))
sur.GLM.posthoc
##### SETTLEMENT #####
#Timepoint 1 only
settlement.data <- larval.data.M0
settle <- (settlement.data$Plastic + settlement.data$Top.Tile + settlement.data$Bottom.Tile +  settlement.data$Edge)/(settlement.data$larvae.added)
settlement <- data.frame(settlement.data$Chamber.num, settlement.data$Origin, settlement.data$Secondary, settle)
colnames(settlement) <- c("Chamber", "Origin", "Secondary", "Prop.Settled") #rename columns
settlement$Settle <- (settlement.data$Plastic + settlement.data$Top.Tile + settlement.data$Bottom.Tile +  settlement.data$Edge) #count settlers
settlement$Not.Settle <- settlement.data$larvae.added-(settlement.data$Plastic + settlement.data$Top.Tile + settlement.data$Bottom.Tile +  settlement.data$Edge) #calculate not settled
mean.settled <- aggregate(Prop.Settled ~ Origin + Secondary, data = settlement, FUN= "mean") #calculate mean
se.settled <- aggregate(Prop.Settled ~ Origin + Secondary, data = settlement, FUN= "std.error") #calculate se
n.settled <- aggregate(Prop.Settled ~ Origin + Secondary, data = settlement, FUN= "length") #calculate se
settlement.data <- cbind(mean.settled, se.settled$Prop.Settled) #make dataframe
colnames(settlement.data) <- c("Origin", "Secondary", "mean", "se") #rename columns
#descriptive stats
(settlement.data[1,3]-settlement.data[2,3])/settlement.data[1,3] #percent change between treatments
(settlement.data[3,3]-settlement.data[4,3])/settlement.data[3,3] #percent change between treatments
mean.sets <- aggregate(Prop.Settled ~ Secondary, data = settlement, FUN= "mean") #calculate mean by secondary treatment
(mean.surs[1,2]-mean.surs[2,2])/mean.surs[1,2] #percent change between secondary treatments
Fig29 <- ggplot(data=settlement.data, aes(x=Secondary, y=mean, group=Origin, colour=Origin, shape=Origin)) + #plot data
geom_line(size=0.7, position=position_dodge(.1)) + #plot lines
scale_colour_manual(values=c("gray", "black")) + #set line color
geom_point(size=4, position=position_dodge(.1), colour="black") + #set point characteristics
scale_shape_manual(values=c(1,18)) + #set shapes
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), #plot error bars
width=0, position=position_dodge(.1), colour="black") + #set error bar characteristics
annotate("text", x = 0.85, y = 0.80, label = "a") +
annotate("text", x = 0.8, y = 0.68, label = "ab") +
annotate("text", x = 2.25, y = 0.56, label = "bc") +
annotate("text", x = 2.2, y = 0.49, label = "c") +
ggtitle("(d) CHAMBER") + #plot title
xlab("Treatment of Offspring") + #plot x axis label
ylab("Settlement") + #plot y axis label
ylim(0,1) + #Y axis limits
theme_bw() + #theme black and white
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.text=element_text(size=16), #set text size
axis.ticks.length=unit(-0.2, "cm"), #turn ticks inward
axis.text.y = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm")), #set margins on labels
axis.text.x = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm"), vjust = 0.5), #set margins on labels
axis.title=element_text(size=18,face="bold"), #set axis title text size
strip.text.x = element_text(size = 16, colour = "black", face="bold"),
axis.line.x = element_line(color = 'black'), #Set the axes color
axis.line.y = element_line(color = 'black'), #Set the axes color
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(),  #Set the plot background
legend.key = element_blank(),  #remove legend background
legend.position="none",  #set legend location
panel.border=element_rect(size=1.25, fill = NA), #set outer border
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0)) #set title attributes
Fig29
#Binomial GLM
# Wald-test with H0 = 0
set.GLM <-  glmer(cbind(Settle, Not.Settle) ~ Origin*Secondary +(1|Chamber), data=settlement, family="binomial", na.action = "na.fail") #repeated measures ANOVA with random intercept but not slope
summary(set.GLM) #view summary
set.mods <- dredge(set.GLM) #describe model selection
set.GLM <-  glmer(cbind(Settle, Not.Settle) ~ Origin+Secondary +(1|Chamber), data=settlement, family="binomial", na.action = "na.fail") #repeated measures ANOVA with random intercept but not slope
Set.Results <- Anova(set.GLM) #view summary
Set.Results#view ANOVA table
dispersion_glmer(set.GLM) #check for over dispersion
set.resid <-resid(set.GLM) #extract residuals
set.shapiro <- shapiro.test(set.resid) #runs a normality test using shapiro-wilk test on the residuals
set.shapiro #view results
sur.qqnorm <- qqnorm(set.resid) # normal quantile plot
sur.qqline <- qqline(set.resid) # adding a qline of comparison
hist(set.resid) #plot histogram of residuals
boxplot(set.resid~ settlement$Origin * settlement$Secondary, ylab = "residuals", las = 2, par(mar = c(12, 5, 4, 2)+ 0.1)) #view Origin variability
#posthoc results
set.GLM.posthoc <- summary(glht(set.GLM, lsm(pairwise~Origin+Secondary)))
set.GLM.posthoc
##### GROWTH #####
data.M1 <- read.csv("Month1_Larval_Size.csv", header=T, sep=",", na.string="NA", as.is=T) #load data
data.M6 <- read.csv("Month6_Larval_Size.csv", header=T, sep=",", na.string="NA", as.is=T) #load data
growth.M1 <- aggregate(Polyp.Num.M1 ~ Date.M1 + Chamber.num, data = data.M1, FUN= "mean") #calculate size and survivorship per tile
growth.M6 <- aggregate(Polyp.Num.M6 ~ Date.M6 + Chamber.num, data = data.M6, FUN= "mean") #calculate size and survivorship per tile
growth.M6[growth.M6 == 0] <- NA #set zeros equal to NA
growth <- (cbind(growth.M1,growth.M6$Polyp.Num.M6, larval.data.M0$Origin, larval.data.M0$Secondary,larval.data.M0$Date, growth.M6$Date.M6)) #make dataframe
colnames(growth) <- c("Date.M1",  "Chamber.num",	"Polyp.Num.M1", "Polyp.Num.M6",	"Origin",	"Secondary",	"Date.M0", "Date.M6") #rename columns
growth$Date.M0<- as.Date(growth$Date.M0,format="%m/%d/%y") #set as date
growth$Date.M1<- as.Date(growth$Date.M1,format="%m/%d/%y") #set as date
growth$Date.M6<- as.Date(growth$Date.M6,format="%m/%d/%y") #set as date
growth$Days.M1 <- difftime(growth$Date.M1, growth$Date.M0, units = c("days")) #calculate the time difference in days
growth$Days.M6 <- difftime(growth$Date.M6, growth$Date.M1, units = c("days")) #calculate the time difference in days
growth$growth.rate.M1 <- (growth$Polyp.Num.M1-1)/(as.numeric(growth$Days.M1)) #calculate growth rate per day
growth$growth.rate.M6 <- (growth$Polyp.Num.M6-growth$Polyp.Num.M1)/(as.numeric(growth$Days.M6)) #calculate growth rate per day
m1.mean.growth <- aggregate(growth.rate.M1 ~ Origin + Secondary, data = growth, FUN= "mean") #calculate mean by origin and secondary treatments
m1.se.growth <- aggregate(growth.rate.M1 ~ Origin + Secondary, data = growth, FUN= "std.error") #calculate se by origin and secondary treatments
m1.n.growth <- aggregate(growth.rate.M1 ~ Origin + Secondary, data = growth, FUN= "length") #calculate se by origin and secondary treatments
m1.growth <- cbind(m1.mean.growth,m1.se.growth$growth.rate.M1) #combine data
colnames(m1.growth) <- c("Origin", "Secondary", "mean", "se") #rename columns
m6.mean.growth <- aggregate(growth.rate.M6 ~ Origin + Secondary, data = growth, FUN= "mean") #calculate mean by origin and secondary treatments
m6.se.growth <- aggregate(growth.rate.M6 ~ Origin + Secondary, data = growth, FUN= "std.error") #calculate se by origin and secondary treatments
m6.n.growth <- aggregate(growth.rate.M6 ~ Origin + Secondary, data = growth, FUN= "length") #calculate se by origin and secondary treatments
m6.growth <- cbind(m6.mean.growth,m6.se.growth$growth.rate.M6) #combine data
colnames(m6.growth) <- c("Origin", "Secondary", "mean", "se") #rename columns
Fig30 <- ggplot(data=m1.growth, aes(x=factor(Secondary), y=mean, group=Origin, colour=Origin, shape=Origin)) + #plot data
geom_line(size=0.7, position=position_dodge(.1)) + #plot lines
scale_colour_manual(values=c("gray", "black")) + #set line color
geom_point(size=4, position=position_dodge(.1), colour="black") + #set point characteristics
scale_shape_manual(values=c(1,18)) + #set shapes
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), #plot error bars
width=0, position=position_dodge(.1), colour="black") + #set error bar characteristics
ggtitle("(e) MONTH 1") + #plot title
xlab("Treatment of Offspring") + #plot x axis label
ylab(expression(bold(~Growth~~"(polyps "*d^"1"*")"))) + #plot y axis label
ylim(0,0.1) + #Y axis limits
theme_bw() + #theme black and white
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.text=element_text(size=16), #set text size
axis.ticks.length=unit(-0.2, "cm"), #turn ticks inward
axis.text.y = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm")), #set margins on labels
axis.text.x = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm"), vjust = 0.5), #set margins on labels
axis.title=element_text(size=18,face="bold"), #set axis title text size
strip.text.x = element_text(size = 16, colour = "black", face="bold"),
axis.line.x = element_line(color = 'black'), #Set the axes color
axis.line.y = element_line(color = 'black'), #Set the axes color
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(),  #Set the plot background
legend.key = element_blank(),  #remove legend background
legend.position="none",  #set legend location
panel.border=element_rect(size=1.25, fill = NA), #set outer border
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0)) #set title attributes
Fig30
Fig31 <- ggplot(data=m6.growth, aes(x=factor(Secondary), y=mean, group=Origin, colour=Origin, shape=Origin)) + #plot data
geom_line(size=0.7, position=position_dodge(.1)) + #plot lines
scale_colour_manual(values=c("gray", "black")) + #set line color
geom_point(size=4, position=position_dodge(.1), colour="black") + #set point characteristics
scale_shape_manual(values=c(1,18)) + #set shapes
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), #plot error bars
width=0, position=position_dodge(.1), colour="black") +  #set error bar characteristics
ggtitle("(f) MONTH 6") +  #plot title
xlab("Treatment of Offspring") + #plot x axis label
ylab(expression(bold(~Growth~~"(polyps "*d^"1"*")"))) + #plot y axis label
ylim(0,0.025) + #Y axis limits
theme_bw() + #theme black and white
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.text=element_text(size=16), #set text size
axis.ticks.length=unit(-0.2, "cm"), #turn ticks inward
axis.text.y = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm")), #set margins on labels
axis.text.x = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm"), vjust = 0.5), #set margins on labels
axis.title=element_text(size=18,face="bold"), #set axis title text size
strip.text.x = element_text(size = 16, colour = "black", face="bold"),
axis.line.x = element_line(color = 'black'), #Set the axes color
axis.line.y = element_line(color = 'black'), #Set the axes color
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(),  #Set the plot background
legend.key = element_blank(),  #remove legend background
legend.position="none",  #set legend location
panel.border=element_rect(size=1.25, fill = NA), #set outer border
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0)) #set title attributes
Fig31
#Repeated Measures growth
grow.M1<- cbind.data.frame(growth$Chamber.num, growth$Origin, growth$Secondary, growth$growth.rate.M1) #combine data
grow.M1$Timepoint <- "Time1" #identify time points
colnames(grow.M1) <- c( "Chamber.num", "Origin", "Secondary", "growth.rate", "Timepoint") #rename columns
grow.M6<- cbind.data.frame(growth$Chamber.num, growth$Origin, growth$Secondary, growth$growth.rate.M6) #combine data
grow.M6$Timepoint <- "Time6" #identify time points
colnames(grow.M6) <- c( "Chamber.num", "Origin", "Secondary", "growth.rate", "Timepoint") #rename columns
All.Growth <- rbind(grow.M1, grow.M6) #combine data
All.Growth <- na.omit(All.Growth) #remove NA rows
Growth.RM <- lme(log10(growth.rate+1) ~ Origin*Secondary*Timepoint, random = ~ 1|Chamber.num/Timepoint, data=All.Growth, na.action = "na.fail", method="ML") #repeated measures ANOVA
summary(Growth.RM) #view results
Grow.Results <- anova(Growth.RM) #view results
anova(Growth.RM) #view results
grow.mods <- dredge(Growth.RM) #describe model selection
grow.mods
Growth.RM <- lme(log10(growth.rate+1) ~ Origin*Timepoint, random = ~ 1|Chamber.num/Timepoint, data=All.Growth, na.action = "na.fail", method="ML") #repeated measures ANOVA
Grow.Results <- anova(Growth.RM) #view results
anova(Growth.RM) #view results
gro.resid <-resid(Growth.RM) #extract residuals
gro.shapiro <- shapiro.test(gro.resid) #runs a normality test using shapiro-wilk test on the residuals
gro.shapiro #view results
gro.qqnorm <- qqnorm(gro.resid) # normal quantile plot
gro.qqline <- qqline(gro.resid) # adding a qline of comparison
hist(gro.resid) #plot histogram of residuals
boxplot(gro.resid~ All.Growth$Origin * All.Growth$Secondary* All.Growth$Timepoint, ylab = "residuals", las = 2, par(mar = c(12, 5, 4, 2)+ 0.1)) #view Origin variability
#posthoc results
Growth.RM.posthoc <- summary(glht(Growth.RM, lsm(pairwise~Origin*Timepoint)))
Growth.RM.posthoc
#transform and calculate descriptive stats
All.Growth$logged <- log10(All.Growth$growth.rate +1)
mean.growth <- aggregate(logged ~ Origin + Secondary + Timepoint, data = All.Growth, FUN= "mean") #calculate mean by origin and secondary treatments
se.growth <- aggregate(logged ~ Origin + Secondary + Timepoint, data = All.Growth, FUN= "std.error") #calculate se by origin and secondary treatments
growth <- cbind(mean.growth,se.growth$logged) #combine data
m1.growth <- subset(growth, Timepoint=="Time1")
colnames(m1.growth) <- c("Origin", "Secondary","Timepoint", "mean", "se") #rename columns
m6.growth <- subset(growth, Timepoint=="Time6")
colnames(m6.growth) <- c("Origin", "Secondary","Timepoint", "mean", "se") #rename columns
#backtransform means and asymetrical error
m1.growth.bt <- m1.growth #assign data
m1.growth.bt$mean <- 10^(m1.growth.bt$mean)-1 #backtransform
m1.growth.bt$upper <- m1.growth$mean + m1.growth$se #upper sem value
m1.growth.bt$lower <- m1.growth$mean - m1.growth$se #lower sem value
m1.growth.bt$upper.bt <- 10^(m1.growth.bt$upper)-1 #backtransform
m1.growth.bt$lower.bt <- 10^(m1.growth.bt$lower)-1 #backtransform
#descriptive stats
g1 <-m1.growth.bt[2,4]/m1.growth.bt[1,4] #fold change between treatments
g2 <-m1.growth.bt[4,4]/m1.growth.bt[3,4] #fold change between treatments
mean(g1,g2)
Fig32 <- ggplot(data=m1.growth.bt, aes(x=factor(Secondary), y=mean, group=Origin, colour=Origin, shape=Origin)) + #plot data
geom_line(size=0.7, position=position_dodge(.1)) + #plot lines
scale_colour_manual(values=c("gray", "black")) + #set line color
geom_point(size=4, position=position_dodge(.1), colour="black") + #set point characteristics
scale_shape_manual(values=c(1,18)) + #set shapes
geom_errorbar(aes(ymin=lower.bt, ymax=upper.bt), #plot error bars
width=0, position=position_dodge(.1), colour="black") + #set error bar characteristics
annotate("text", x = 2.16, y = 0.06, label = "*", size=10) +
ggtitle("(e) MONTH 1") + #plot title
xlab("Treatment of Offspring") + #plot x axis label
ylab(expression(bold(~Growth~~"(polyps "*d^"-1"*")"))) + #plot y axis label
ylim(0,0.1) + #Y axis limits
theme_bw() + #theme black and white
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.text=element_text(size=16), #set text size
axis.ticks.length=unit(-0.2, "cm"), #turn ticks inward
axis.text.y = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm")), #set margins on labels
axis.text.x = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm"), vjust = 0.5), #set margins on labels
axis.title=element_text(size=18,face="bold"), #set axis title text size
strip.text.x = element_text(size = 16, colour = "black", face="bold"),
axis.line.x = element_line(color = 'black'), #Set the axes color
axis.line.y = element_line(color = 'black'), #Set the axes color
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(),  #Set the plot background
legend.key = element_blank(),  #remove legend background
legend.position="none",  #set legend location
panel.border=element_rect(size=1.25, fill = NA), #set outer border
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0)) #set title attributes
Fig32
#backtransform means and asymetrical error
m6.growth.bt <- m6.growth #assign data
m6.growth.bt$mean <- 10^(m6.growth.bt$mean)-1 #backtransform
m6.growth.bt$upper <- m6.growth$mean + m6.growth$se #upper sem value
m6.growth.bt$lower <- m6.growth$mean - m6.growth$se #lower sem value
m6.growth.bt$upper.bt <- 10^(m6.growth.bt$upper)-1 #backtransform
m6.growth.bt$lower.bt <- 10^(m6.growth.bt$lower)-1 #backtransform
Fig33 <- ggplot(data=m6.growth.bt, aes(x=factor(Secondary), y=mean, group=Origin, colour=Origin, shape=Origin)) + #plot data
geom_line(size=0.7, position=position_dodge(.1)) + #plot lines
scale_colour_manual(values=c("gray", "black")) + #set line color
geom_point(size=4, position=position_dodge(.1), colour="black") + #set point characteristics
scale_shape_manual(values=c(1,18)) + #set shapes
geom_errorbar(aes(ymin=lower.bt, ymax=upper.bt), #plot error bars
width=0, position=position_dodge(.1), colour="black") +  #set error bar characteristics
ggtitle("(f) MONTH 6") +  #plot title
xlab("Treatment of Offspring") + #plot x axis label
ylab(expression(bold(~Growth~~"(polyps "*d^"-1"*")"))) + #plot y axis label
ylim(0,0.1) + #Y axis limits
theme_bw() + #theme black and white
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.text=element_text(size=16), #set text size
axis.ticks.length=unit(-0.2, "cm"), #turn ticks inward
axis.text.y = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm")), #set margins on labels
axis.text.x = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm"), vjust = 0.5), #set margins on labels
axis.title=element_text(size=18,face="bold"), #set axis title text size
strip.text.x = element_text(size = 16, colour = "black", face="bold"),
axis.line.x = element_line(color = 'black'), #Set the axes color
axis.line.y = element_line(color = 'black'), #Set the axes color
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(),  #Set the plot background
legend.key = element_blank(),  #remove legend background
legend.position="none",  #set legend location
panel.border=element_rect(size=1.25, fill = NA), #set outer border
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0)) #set title attributes
Fig33
#####ALL FIGURES, TABLES, AND STATISTICAL RESULTS#####
setwd(file.path(mainDir, 'Output'))
#Capture Figures to File
pdf("Fig2.Larval.release.pdf", width = 11, height = 6)
inset <- viewport(width = 0.22, height = 0.5, x = 0.86, y = 0.65)  # the inset in upper right
grid.newpage()
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
pushViewport(viewport(layout = grid.layout(1, 3)))
print(Fig22, vp = vplayout(1, 1))
print(Fig23, vp = vplayout(1, 2))
print(Fig24, vp = vplayout(1, 3))
dev.off()
Larval.Perform <- arrangeGrob(Fig26, Fig27, Fig28,
Fig29, Fig32, Fig33, ncol=3)
ggsave(file="Fig3.Larval.Performance.pdf", Larval.Perform, width =12, height = 6, units = c("in"))
FigureS1.Physical <- grid.arrange(arrangeGrob(Fig2, Fig5, Fig9, Fig13, left="TEMPERATURE", ncol=4),
arrangeGrob(Fig3, Fig7, Fig11, Fig15, left="IRRADIANCE", ncol=4),
arrangeGrob(FigMT, Fig17, Fig19, Fig21, left="pH", ncol=4), ncol=1)
ggsave(file="FigS1.Physical_Experimental_Conditions.pdf", FigureS1.Physical, width =11, height = 8.5, units = c("in"))
# write.table(adult.chem.table, "Seawater_chemistry_table_Output_Adult.csv", sep=",", row.names = FALSE)
# write.table(M1.chem.table, "Seawater_chemistry_table_Output_M1.csv", sep=",", row.names = FALSE)
# write.table(M6.chem.table, "Seawater_chemistry_table_Output_M6.csv", sep=",", row.names = FALSE)
tt2 <- ttheme_minimal()
title1 <- "A) Adult Exposure"
title2 <- "B) Month 1 Exposure"
title3 <- "C) Month 6 Exposure"
t1 <- grid.text(title1, just="left")
t2 <- grid.text(title2, just="left")
t3 <- grid.text(title3, just="left")
SW.Chem.Tables <- grid.arrange(
t1,
tableGrob(adult.chem.table, theme=tt2),
t2,
tableGrob(M1.chem.table, theme=tt2),
t3,
tableGrob(M6.chem.table, theme=tt2),
nrow=6)
ggsave(file="SW.Chemistry.Table.pdf", SW.Chem.Tables, width = 11, height = 6)
### Generate Stats Table
survivorship <- as.data.frame(Sur.Results)
survivorship <-round(survivorship[,],3)
survivorship
settlement <- as.data.frame(Set.Results)
settlement <-round(settlement[,],3)
settlement
growth <- anova(Growth.RM)
growth <-round(growth[,],3)
growth
# pdf("table2.pdf", width = 11, height = 6, nrow=3)
# sur.table <- grid.table(survivorship)
# set.table <- grid.table(settlement)
# gro.table <- grid.table(growth)
# dev.off()
#Capture statistical results to file
capture.output(june.ks, july.ks, august.ks, sur.mods, survivorship, set.mods, settlement, grow.mods, growth,  file="HI_Pdam_Parental_Stat_Results.txt")
setwd(file.path(mainDir, 'Data'))
