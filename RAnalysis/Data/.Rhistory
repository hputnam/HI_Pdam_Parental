axis.line.x = element_line(color = 'black'), #Set the axes color
axis.line.y = element_line(color = 'black'), #Set the axes color
axis.text.x=element_text(angle=90),
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(),  #Set the plot background
legend.key = element_blank(),  #remove legend background
legend.position="none",  #set legend location
plot.title = element_text(face = 'bold',
size = 12,
hjust = 0)) #set title attributes
Fig26
july.amb <- subset(july.larvae, Treatment=="Ambient") #subset data
july.high <- subset(july.larvae, Treatment=="High") #subset data
july.ks <-ks.test(july.amb$mean, july.high$mean) #Kolmogorov-Smirnov Test Ho: differences in distribution
july.ks #view results
#august
august.release.data <- read.csv("august.larval.release.data.csv", header=T, sep=",", na.string="NA", as.is=T) #load data
august.release.data <- na.omit(august.release.data) #remove NA
august.mean_larvae <- aggregate(numb.larvae ~ Lunar.Day * Treatment, data=august.release.data, FUN=mean) #calculate mean of Day * treatment
august.se_larvae <- aggregate(numb.larvae ~ Lunar.Day * Treatment, data=august.release.data, FUN=std.error) #calculate se of Day * treatment
august.larvae <- cbind(august.mean_larvae,august.se_larvae$numb.larvae) #make dataframe
colnames(august.larvae) <- c("Lunar.Day", "Treatment", "mean", "se") #rename columns
august.larvae #view data
Fig27 <- ggplot(august.larvae, aes(x=Lunar.Day, y=mean, fill=Treatment)) + #plot mean as a function of day
geom_bar(position=position_dodge(), stat="identity", show.legend=FALSE) + #assign bar id and position
scale_fill_manual(values=c("gray", "black")) + #bar fill color
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), #plot error bars
width=0, size = 0.4,                   # Width of the error bars
position=position_dodge(.9)) + #set bar position
ylim(0,400) + #set y limits
ggtitle("C) August") + #plot title
xlab("Lunar Day") + #x axis title
ylab("Number of Planulae Released") + #y axis title
theme_bw() + #theme black and white
guides(fill = guide_legend(keywidth = 0.5, keyheight = 0.5))+ #legend guides
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.text=element_text(size=16), #set text size
axis.title=element_text(size=18,face="bold"), #set axis title text size
strip.text.x = element_text(size = 16, colour = "black", face="bold"),
panel.border = element_blank(), #Set the border
axis.line.x = element_line(color = 'black'), #Set the axes color
axis.line.y = element_line(color = 'black'), #Set the axes color
axis.text.x=element_text(angle=90),
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(),  #Set the plot background
legend.key = element_blank(),  #remove legend background
legend.position="none",  #set legend location
plot.title = element_text(face = 'bold',
size = 12,
hjust = 0)) #set title attributes
Fig27
august.amb <- subset(august.larvae, Treatment=="Ambient") #subset data
august.high <- subset(august.larvae, Treatment=="High") #subset data
august.ks <-ks.test(august.amb$mean, august.high$mean) #Kolmogorov-Smirnov Test Ho: differences in distribution
august.ks #view results
## Total release as a function of both treatment and time
RM.release.data <- read.csv("RM_Release_Data.csv", header=T, sep=",", na.string="NA", as.is=T) #read in data in long format
all.release.mean <- aggregate(Total.Release ~ Treatment + Time, data=RM.release.data, mean) #calculate mean by treatment and time
all.release.se <- aggregate(Total.Release ~ Treatment + Time, data=RM.release.data, std.error)  #calculate se by treatment and time
all.release <- cbind(all.release.mean, all.release.se$Total.Release) #make dataframe
colnames(all.release) <- c("Treatment", "Time", "mean", "se") #rename columns
Fig28 <- ggplot(all.release, aes(x=Time, y=mean, colour=Treatment, group=Treatment), position=position_dodge(width=0.5)) +  #plot mean as a function of Time
geom_errorbar(aes(ymin=all.release$mean - all.release$se, ymax=all.release$mean + all.release$se), #plot error bars
colour="black", width=0, size = 0.4, # Width of the error bars
position=position_dodge(width=0.5)) + #set bar position
geom_point(position=position_dodge(width=0.5), size=2, shape=15) +
scale_colour_manual(values = c("gray","black")) + #set point fill color
scale_x_discrete(limits=c("June","July","August")) + #label x axis in order
ylab(" Total Release") + #y axis label
ylim(0,1700) + #y axis limits
ggtitle("D) Total") + #plot title
theme_bw() + #theme black and white
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.text=element_text(size=16), #set text size
axis.title=element_text(size=18,face="bold"), #set axis title text size
strip.text.x = element_text(size = 16, colour = "black", face="bold"),
panel.border = element_blank(), #Set the border
axis.line.x = element_line(color = 'black'), #Set the axes color
axis.line.y = element_line(color = 'black'), #Set the axes color
axis.text.x=element_text(angle=90),
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(),  #Set the plot background
legend.key = element_blank(),  #remove legend background
legend.position="none",  #set legend location
plot.title = element_text(face = 'bold',
size = 12,
hjust = 0)) #set title attributes
Fig28
#GLM release by treatment and time
RM.release.data #view data
RM.release.data <- na.omit(RM.release.data) #remove NA
Interaction <- glm(log10(Total.Release+1) ~ Treatment * Time, data=RM.release.data) #run generalized linear model
summary(Interaction) #view summary
release.resid <-resid(Interaction)
release.shapiro <- shapiro.test(release.resid) #runs a normality test using shapiro-wilk test on the residuals
release.shapiro #view results
release.qqnorm <- qqnorm(release.resid) # normal quantile plot
release.qqline <- qqline(release.resid) # adding a qline of comparison
hist(release.resid) #plot histogram of residuals
plot(Interaction$fitted.values, Interaction$residuals) #plot residuals as a function of fitted data
release.posthoc <- lsmeans(Interaction, specs=c("Time")) #calculate MS means
release.posthoc #view results
release.posthoc.p <- contrast(release.posthoc, method="pairwise") #contrast treatment groups within a species at each time point
release.posthoc.p #view results
release.posthoc.lett <- cld(release.posthoc , alpha=.05, Letters=letters) #identify posthoc letter differences
release.posthoc.lett #view results
##### SURVIVORSHIP #####
larval.data.M0 <- read.csv("Larval_Data_M0.csv", header=T, sep=",", na.string="NA", as.is=T) #load data
proportion.alive.M0 <- (larval.data.M0$Plastic + larval.data.M0$Top.Tile + larval.data.M0$Bottom.Tile +  larval.data.M0$Edge +	larval.data.M0$Swimming)/larval.data.M0$larvae.added #calculate survivorship
proportion.dead.M0 <- 1-proportion.alive.M0 #calculate mortality
larval.data.M0$Alive <- (larval.data.M0$Plastic + larval.data.M0$Top.Tile + larval.data.M0$Bottom.Tile +  larval.data.M0$Edge +	larval.data.M0$Swimming)
larval.data.M0$Dead <- larval.data.M0$larvae.added-(larval.data.M0$Plastic + larval.data.M0$Top.Tile + larval.data.M0$Bottom.Tile +  larval.data.M0$Edge +	larval.data.M0$Swimming)
survive.M0 <- data.frame (larval.data.M0$Chamber.num, larval.data.M0$Timepoint, larval.data.M0$Origin, larval.data.M0$Secondary, proportion.alive.M0, proportion.dead.M0, larval.data.M0$Alive, larval.data.M0$Dead) #make dataframe
colnames(survive.M0) <- c("Chamber", "Timepoint", "Origin", "Secondary", "Prop.Alive","Prop.Dead", "Alive","Dead") #rename columns
mean.survive.M0 <- aggregate(Prop.Alive ~ Origin * Secondary, data = survive.M0, FUN= "mean") #calculate mean by origin and secondary treatments
se.survive.M0 <- aggregate(Prop.Alive ~ Origin * Secondary, data = survive.M0, FUN= "std.error")  #calculate se by origin and secondary treatments
survivorship.M0 <- cbind(mean.survive.M0,se.survive.M0$Prop.Alive) #combine data
colnames(survivorship.M0) <- c("Origin", "Secondary", "mean", "se") #rename columns
Fig29 <- ggplot(data=survivorship.M0, aes(x=Secondary, y=mean, group=Origin, colour=Origin, shape=Origin)) + #plot data
geom_line(size=0.7, position=position_dodge(.1)) + #plot lines
scale_colour_manual(values=c("gray", "black")) + #set line color
geom_point(size=4, position=position_dodge(.1), colour="black") + #set point characteristics
scale_shape_manual(values=c(1,18)) + #set shapes
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), #plot error bars
width=0, position=position_dodge(.1), colour="black") + #set error bar characteristics
ggtitle("A)") + #plot title
annotate("text", x = 0.87, y = 0.82, label = "a") + #add posthoc letters
annotate("text", x = 0.85, y = 0.74, label = "a") + #add posthoc letters
annotate("text", x = 2.2, y = 0.59, label = "ab") + #add posthoc letters
annotate("text", x = 2.15, y = 0.51, label = "bc") + #add posthoc letters
xlab("Treatment of Offspring") + #plot x axis label
ylab("Survivorship") + #plot y axis label
ylim(0,1) + #Y axis limits
theme_bw() + #theme black and white
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.text=element_text(size=16), #set text size
axis.title=element_text(size=18,face="bold"), #set axis title text size
strip.text.x = element_text(size = 16, colour = "black", face="bold"),
panel.border = element_blank(), #Set the border
axis.line.x = element_line(color = 'black'), #Set the axes color
axis.line.y = element_line(color = 'black'), #Set the axes color
axis.text.x=element_text(angle=0), #set text angle
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(),  #Set the plot background
legend.key = element_blank(),  #remove legend background
legend.position="none",  #set legend location
plot.title = element_text(face = 'bold',
size = 12,
hjust = 0)) #set title attributes
Fig29 #view plot
#Month1
larval.data.M1 <- read.csv("Larval_Data_M1.csv", header=T, sep=",", na.string="NA", as.is=T) #load data
proportion.alive.M1 <- larval.data.M1$month1/larval.data.M1$larvae.added #calculate survivorship
proportion.dead.M1 <- 1-proportion.alive.M1 #calculate mortality
larval.data.M1$Alive <- larval.data.M1$month1
larval.data.M1$Dead <- larval.data.M1$larvae.added-larval.data.M1$month1
survive.M1 <- data.frame (larval.data.M1$Chamber.num, larval.data.M1$Timepoint, larval.data.M1$Origin, larval.data.M1$Secondary, proportion.alive.M1, proportion.dead.M1, larval.data.M1$Alive, larval.data.M1$Dead) #make dataframe
colnames(survive.M1) <- c("Chamber", "Timepoint", "Origin", "Secondary", "Prop.Alive","Prop.Dead", "Alive","Dead") #rename columns
survive.M1$Timepoint <- "Time2"
mean.survive.M1 <- aggregate(Prop.Alive ~ Origin + Secondary, data = survive.M1, FUN= "mean") #calculate mean by origin and secondary treatments
se.survive.M1 <- aggregate(Prop.Alive ~ Origin + Secondary, data = survive.M1, FUN= "std.error") #calculate se by origin and secondary treatments
survivorship.M1 <- cbind(mean.survive.M1,se.survive.M1$Prop.Alive) #combine data
colnames(survivorship.M1) <- c("Origin", "Secondary", "mean", "se") #rename columns
Fig30 <- ggplot(data=survivorship.M1, aes(x=Secondary, y=mean, group=Origin, colour=Origin, shape=Origin)) + #plot data
geom_line(size=0.7, position=position_dodge(.1)) + #plot lines
scale_colour_manual(values=c("gray", "black")) + #set line color
geom_point(size=4, position=position_dodge(.1), colour="black") + #set point characteristics
scale_shape_manual(values=c(1,18)) + #set shapes
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), #plot error bars
width=0, position=position_dodge(.1), colour="black") + #set error bar characteristics
ggtitle("C)") + #plot title
annotate("text", x = 0.87, y = 0.52, label = "bc") + #add posthoc letters
annotate("text", x = 0.85, y = 0.42, label = "cd") + #add posthoc letters
annotate("text", x = 2.2, y = 0.37, label = "cd") + #add posthoc letters
annotate("text", x = 2.15, y = 0.30, label = "d") + #add posthoc letters
xlab("Treatment of Offspring") + #plot x axis label
ylab("Survivorship") + #plot y axis label
ylim(0,1) + #Y axis limits
theme_bw() + #theme black and white
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.text=element_text(size=16), #set text size
axis.title=element_text(size=18,face="bold"), #set axis title text size
strip.text.x = element_text(size = 16, colour = "black", face="bold"),
panel.border = element_blank(), #Set the border
axis.line.x = element_line(color = 'black'), #Set the axes color
axis.line.y = element_line(color = 'black'), #Set the axes color
axis.text.x=element_text(angle=0),
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(),  #Set the plot background
legend.key = element_blank(),  #remove legend background
legend.position="none",  #set legend location
plot.title = element_text(face = 'bold',
size = 12,
hjust = 0)) #set title attributes
Fig30
#Month6
proportion.alive.M6 <- larval.data.M1$month6/larval.data.M1$larvae.added #claculate survival
proportion.dead.M6 <- 1-proportion.alive.M6 # calculate mortality
survive.M6 <- data.frame (larval.data.M1$Chamber.num, larval.data.M1$Timepoint, larval.data.M1$Origin, larval.data.M1$Secondary, proportion.alive.M6, proportion.dead.M6) #make dataframe
colnames(survive.M6) <- c("Chamber", "Timepoint", "Origin", "Secondary", "Prop.Alive","Prop.Dead") #rename columns
survive.M6$Timepoint <- "Time3" #identify timepoint
survive.M6$Alive <- larval.data.M1$month6
survive.M6$Dead <- larval.data.M1$larvae.added-larval.data.M1$month6
mean.survive.M6 <- aggregate(Prop.Alive ~ Origin + Secondary, data = survive.M6, FUN= "mean") #calculate mean
se.survive.M6 <- aggregate(Prop.Alive ~ Origin + Secondary, data = survive.M6, FUN= "std.error") #calculate SEM
survivorship.M6 <- cbind(mean.survive.M6,se.survive.M6$Prop.Alive) #combine descriptive statistics
colnames(survivorship.M6) <- c("Origin", "Secondary", "mean", "se") #rename columns
Fig31 <- ggplot(data=survivorship.M6, aes(x=Secondary, y=mean, group=Origin, colour=Origin, shape=Origin)) + #plot data
geom_line(size=0.7, position=position_dodge(.1)) + #plot lines
scale_colour_manual(values=c("gray", "black"), labels=c("Ambient Parental Envt.", "High Parental Envt.")) + #set line color
geom_point(size=4, position=position_dodge(.1), colour="black") + #set point characteristics
scale_shape_manual(values=c(1,18), labels=c("Ambient Parental Envt.", "High Parental Envt.")) + #set shapes
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), #plot error bars
width=0, position=position_dodge(.1), colour="black") + #set error bar characteristics
ggtitle("E)") + #plot title
annotate("text", x = 0.87, y = 0.16, label = "ef") + #add posthoc letters
annotate("text", x = 0.85, y = 0.12, label = "e") + #add posthoc letters
annotate("text", x = 2.12, y = 0.06, label = "ef") + #add posthoc letters
annotate("text", x = 2.05, y = 0.005, label = "f") + #add posthoc letters
xlab("Treatment of Offspring") + #plot x axis label
ylab("Survivorship") + #plot y axis label
ylim(0,1) + #Y axis limits
theme_bw() + #theme black and white
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.text=element_text(size=16), #set text size
axis.title=element_text(size=18,face="bold"), #set axis title text size
strip.text.x = element_text(size = 16, colour = "black", face="bold"),
panel.border = element_blank(), #Set the border
axis.line.x = element_line(color = 'black'), #Set the axes color
axis.line.y = element_line(color = 'black'), #Set the axes color
axis.text.x=element_text(angle=0), #text angle
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(),  #Set the plot background
legend.key = element_blank(),  #remove legend background
legend.position=c(0.6,0.8),  #set legend location
plot.title = element_text(face = 'bold',
size = 12,
hjust = 0)) #set title attributes
Fig31
#Repeated Measures Survivorship
All.Survivorship <- rbind(survive.M0, survive.M1, survive.M6) #combine data
All.Survivorship$Origin.numeric <- as.numeric(All.Survivorship$Origin) #convert factor to numeric
All.Survivorship$Secondary.numeric <- as.numeric(All.Survivorship$Secondary) #convert factor to numeric
All.Survivorship$Timepoint.numeric <- as.numeric(All.Survivorship$Timepoint) #convert factor to numeric
sur.RM <-  lme(sqrt(Alive) ~ Origin*Secondary*Timepoint, random = ~ Timepoint|Chamber, data=All.Survivorship) #repeated measures ANOVA with random intercept but not slope
summary(sur.RM) #view summary
anova(sur.RM) #view ANOVA table
sur.resid <-resid(sur.RM) #extract residuals
sur.shapiro <- shapiro.test(sur.resid) #runs a normality test using shapiro-wilk test on the residuals
sur.shapiro #view results
sur.qqnorm <- qqnorm(sur.resid) # normal quantile plot
sur.qqline <- qqline(sur.resid) # adding a qline of comparison
hist(sur.resid) #plot histogram of residuals
plot(sur.RM) ### Homogen of Var ###
sur.RM.posthoc <- lsmeans(sur.RM, specs=c("Timepoint","Origin","Secondary")) #calculate MS means
sur.RM.posthoc #view results
sur.RM.posthoc.p <- contrast(sur.RM.posthoc, method="pairwise", by=c("Timepoint")) #contrast treatment groups within a species at each time point
sur.RM.posthoc.p #view results
sur.RM.posthoc.lett <- cld(sur.RM.posthoc , alpha=.05, Letters=letters) #identify posthoc letter differences
sur.RM.posthoc.lett #view results
#Binomial GLM
# Wald-test with H0 = 0
sur.GLM <-  glmer(cbind(Alive, Dead) ~ Origin*Secondary*Timepoint +(Timepoint|Chamber), data=All.Survivorship, family="binomial") #repeated measures ANOVA with random intercept but not slope
summary(sur.GLM) #view summary
anova(sur.GLM) #view ANOVA table
sur.GLM.posthoc <- lsmeans(sur.GLM, specs=c("Timepoint","Origin","Secondary")) #calculate MS means
sur.GLM.posthoc #view results
sur.GLM.posthoc.p <- contrast(sur.GLM.posthoc, method="pairwise", by=c("Timepoint")) #contrast treatment groups within a species at each time point
sur.GLM.posthoc.p #view results
sur.GLM.posthoc.lett <- cld(sur.GLM.posthoc, alpha=.05, Letters=letters) #identify posthoc letter differences
sur.GLM.posthoc.lett #view results
##### INITIAL SETTLEMENT #####
#Timepoint 1 only
settlement.data <- larval.data.M0
settle <- (settlement.data$Plastic + settlement.data$Top.Tile + settlement.data$Bottom.Tile +  settlement.data$Edge)/(settlement.data$larvae.added)
settlement <- data.frame(settlement.data$Chamber.num, settlement.data$Origin, settlement.data$Secondary, settle)
colnames(settlement) <- c("Chamber", "Origin", "Secondary", "Prop.Settled")
settlement$Alive <- (settlement.data$Plastic + settlement.data$Top.Tile + settlement.data$Bottom.Tile +  settlement.data$Edge)
settlement$Dead <- settlement.data$larvae.added-(settlement.data$Plastic + settlement.data$Top.Tile + settlement.data$Bottom.Tile +  settlement.data$Edge)
mean.settled <- aggregate(Prop.Settled ~ Origin + Secondary, data = settlement, FUN= "mean")
se.settled <- aggregate(Prop.Settled ~ Origin + Secondary, data = settlement, FUN= "std.error")
settlement.data <- cbind(mean.settled, se.settled$Prop.Settled)
colnames(settlement.data) <- c("Origin", "Secondary", "mean", "se")
Fig32 <- ggplot(data=settlement.data, aes(x=Secondary, y=mean, group=Origin, colour=Origin, shape=Origin)) + #plot data
geom_line(size=0.7, position=position_dodge(.1)) + #plot lines
scale_colour_manual(values=c("gray", "black")) + #set line color
geom_point(size=4, position=position_dodge(.1), colour="black") + #set point characteristics
scale_shape_manual(values=c(1,18)) + #set shapes
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), #plot error bars
width=0, position=position_dodge(.1), colour="black") + #set error bar characteristics
annotate("text", x = 0.85, y = 0.80, label = "a") +
annotate("text", x = 0.8, y = 0.68, label = "ab") +
annotate("text", x = 2.25, y = 0.56, label = "bc") +
annotate("text", x = 2.2, y = 0.49, label = "c") +
ggtitle("B)") + #plot title
xlab("Treatment of Offspring") + #plot x axis label
ylab("Settlement") + #plot y axis label
ylim(0,1) + #Y axis limits
theme_bw() + #theme black and white
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.text=element_text(size=16), #set text size
axis.title=element_text(size=18,face="bold"), #set axis title text size
strip.text.x = element_text(size = 16, colour = "black", face="bold"),
panel.border = element_blank(), #Set the border
axis.line.x = element_line(color = 'black'), #Set the axes color
axis.line.y = element_line(color = 'black'), #Set the axes color
axis.text.x=element_text(angle=0), #text angle
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(),  #Set the plot background
legend.key = element_blank(),  #remove legend background
legend.position="none",  #set legend location
plot.title = element_text(face = 'bold',
size = 12,
hjust = 0)) #set title attributes
Fig32
settlement.lm <- aov(asin(Settled) ~Origin * Secondary, data=settlement) #two-way ANOVA
anova(settlement.lm) #view ANOVA results
settlement.resid <- resid(settlement.lm) #identify residuals
settlement.shapiro <- shapiro.test(settlement.resid) #runs a normality test using shapiro-wilk test on the residuals
settlement.shapiro #view results
settlement.qqnorm <- qqnorm(settlement.resid) # normal quantile plot
settlement.qqline <- qqline(settlement.resid) # adding a qline of comparison
hist(settlement.resid) #plot histogram of residuals
plot(settlement.lm$fitted, settlement.lm$residuals) #plot residuals as a function of fitted data
settlement.levene <- leveneTest(Settled  ~Origin * Secondary, data=settlement) #Levene's Test for Homogeneity of Variance
settlement.levene #view results
sett.posthoc <- lsmeans(settlement.lm, specs=c("Origin", "Secondary")) #calculate MS means
sett.posthoc #view results
sett.posthoc.lett <- cld(sett.posthoc , alpha=.05, Letters=letters) #identify posthoc letter differences
sett.posthoc.lett #view results
#Binomial GLM
# Wald-test with H0 = 0
set.GLM <-  glmer(cbind(Alive, Dead) ~ Origin*Secondary +(1|Chamber), data=settlement, family="binomial") #repeated measures ANOVA with random intercept but not slope
summary(set.GLM) #view summary
anova(set.GLM) #view ANOVA table
set.GLM.posthoc <- lsmeans(set.GLM, specs=c("Origin","Secondary")) #calculate MS means
set.GLM.posthoc #view results
set.GLM.posthoc.p <- contrast(set.GLM.posthoc, method="pairwise") #contrast treatment groups within a species at each time point
set.GLM.posthoc.p #view results
set.GLM.posthoc.lett <- cld(set.GLM.posthoc, alpha=.05, Letters=letters) #identify posthoc letter differences
set.GLM.posthoc.lett #view results
##### GROWTH #####
data.M1 <- read.csv("Month1_Larval_Size.csv", header=T, sep=",", na.string="NA", as.is=T) #load data
data.M6 <- read.csv("Month6_Larval_Size.csv", header=T, sep=",", na.string="NA", as.is=T) #load data
growth.M1 <- aggregate(Polyp.Num.M1 ~ Date.M1 + Chamber.num, data = data.M1, FUN= "mean") #calculate size and survivorship per tile
growth.M6 <- aggregate(Polyp.Num.M6 ~ Date.M6 + Chamber.num, data = data.M6, FUN= "mean") #calculate size and survivorship per tile
growth.M6[growth.M6 == 0] <- NA #set zeros equal to NA
growth <- (cbind(growth.M1,growth.M6$Polyp.Num.M6, larval.data.M0$Origin, larval.data.M0$Secondary,larval.data.M0$Date, growth.M6$Date.M6)) #make dataframe
colnames(growth) <- c("Date.M1",  "Chamber.num",	"Polyp.Num.M1", "Polyp.Num.M6",	"Origin",	"Secondary",	"Date.M0", "Date.M6") #rename columns
growth$Date.M0<- as.Date(growth$Date.M0,format="%m/%d/%y") #set as date
growth$Date.M1<- as.Date(growth$Date.M1,format="%m/%d/%y") #set as date
growth$Date.M6<- as.Date(growth$Date.M6,format="%m/%d/%y") #set as date
growth$Days.M1 <- difftime(growth$Date.M1, growth$Date.M0, units = c("days")) #calculate the time difference in days
growth$Days.M6 <- difftime(growth$Date.M6, growth$Date.M1, units = c("days")) #calculate the time difference in days
growth$growth.rate.M1 <- (growth$Polyp.Num.M1-1)/(as.numeric(growth$Days.M1)) #calculate growth rate per day
growth$growth.rate.M6 <- (growth$Polyp.Num.M6-growth$Polyp.Num.M1)/(as.numeric(growth$Days.M6)) #calculate growth rate per day
m1.mean.growth <- aggregate(growth.rate.M1 ~ Origin + Secondary, data = growth, FUN= "mean") #calculate mean by origin and secondary treatments
m1.se.growth <- aggregate(growth.rate.M1 ~ Origin + Secondary, data = growth, FUN= "std.error") #calculate se by origin and secondary treatments
m1.growth <- cbind(m1.mean.growth,m1.se.growth$growth.rate.M1) #combine data
colnames(m1.growth) <- c("Origin", "Secondary", "mean", "se") #rename columns
m6.mean.growth <- aggregate(growth.rate.M6 ~ Origin + Secondary, data = growth, FUN= "mean") #calculate mean by origin and secondary treatments
m6.se.growth <- aggregate(growth.rate.M6 ~ Origin + Secondary, data = growth, FUN= "std.error") #calculate se by origin and secondary treatments
m6.growth <- cbind(m6.mean.growth,m6.se.growth$growth.rate.M6) #combine data
colnames(m6.growth) <- c("Origin", "Secondary", "mean", "se") #rename columns
Fig33 <- ggplot(data=m1.growth, aes(x=factor(Secondary), y=mean, group=Origin, colour=Origin, shape=Origin)) + #plot data
geom_line(size=0.7, position=position_dodge(.1)) + #plot lines
scale_colour_manual(values=c("gray", "black")) + #set line color
geom_point(size=4, position=position_dodge(.1), colour="black") + #set point characteristics
scale_shape_manual(values=c(1,18)) + #set shapes
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), #plot error bars
width=0, position=position_dodge(.1), colour="black") + #set error bar characteristics
ggtitle("D)") + #plot title
xlab("Treatment of Offspring") + #plot x axis label
ylab(expression(bold(~Growth~~"(polyps "*d^"1"*")"))) + #plot y axis label
ylim(0,0.1) + #Y axis limits
theme_bw() + #theme black and white
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.text=element_text(size=16), #set text size
axis.title=element_text(size=18,face="bold"), #set axis title text size
strip.text.x = element_text(size = 16, colour = "black", face="bold"),
panel.border = element_blank(), #Set the border
axis.line.x = element_line(color = 'black'), #Set the axes color
axis.line.y = element_line(color = 'black'), #Set the axes color
axis.text.x=element_text(angle=0), #set text angle
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(),  #Set the plot background
legend.key = element_blank(),  #remove legend background
legend.position="none",  #set legend location
plot.title = element_text(face = 'bold',
size = 12,
hjust = 0)) #set title attributes
Fig33
Fig34 <- ggplot(data=m6.growth, aes(x=factor(Secondary), y=mean, group=Origin, colour=Origin, shape=Origin)) + #plot data
geom_line(size=0.7, position=position_dodge(.1)) + #plot lines
scale_colour_manual(values=c("gray", "black")) + #set line color
geom_point(size=4, position=position_dodge(.1), colour="black") + #set point characteristics
scale_shape_manual(values=c(1,18)) + #set shapes
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), #plot error bars
width=0, position=position_dodge(.1), colour="black") +  #set error bar characteristics
ggtitle("F)") +  #plot title
xlab("Treatment of Offspring") + #plot x axis label
ylab(expression(bold(~Growth~~"(polyps "*d^"1"*")"))) + #plot y axis label
ylim(0,0.1) + #Y axis limits
theme_bw() + #theme black and white
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.text=element_text(size=16), #set text size
axis.title=element_text(size=18,face="bold"), #set axis title text size
strip.text.x = element_text(size = 16, colour = "black", face="bold"),
panel.border = element_blank(), #Set the border
axis.line.x = element_line(color = 'black'), #Set the axes color
axis.line.y = element_line(color = 'black'), #Set the axes color
axis.text.x=element_text(angle=0), #set text angle
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(),  #Set the plot background
legend.key = element_blank(),  #remove legend background
legend.position="none",  #set legend location
plot.title = element_text(face = 'bold',
size = 12,
hjust = 0)) #set title attributes
Fig34
#Repeated Measures growth
grow.M1<- cbind.data.frame(growth$Chamber.num, growth$Origin, growth$Secondary, growth$growth.rate.M1) #combine data
grow.M1$Timepoint <- "Time1" #identify time points
colnames(grow.M1) <- c( "Chamber.num", "Origin", "Secondary", "growth.rate", "Timepoint") #rename columns
grow.M6<- cbind.data.frame(growth$Chamber.num, growth$Origin, growth$Secondary, growth$growth.rate.M6) #combine data
grow.M6$Timepoint <- "Time6" #identify time points
colnames(grow.M6) <- c( "Chamber.num", "Origin", "Secondary", "growth.rate", "Timepoint") #rename columns
All.Growth <- rbind(grow.M1, grow.M6) #combine data
All.Growth <- na.omit(All.Growth) #remove NA rows
Growth.RM <- lme(log10(growth.rate+1) ~ Origin*Secondary*Timepoint, random = ~ Timepoint|Chamber.num, data=All.Growth) #repeated measures ANOVA with random intercept but not slope
summary(Growth.RM) #view results
anova(Growth.RM) #view results
gro.resid <-resid(Growth.RM) #extract residuals
gro.shapiro <- shapiro.test(gro.resid) #runs a normality test using shapiro-wilk test on the residuals
gro.shapiro #view results
gro.qqnorm <- qqnorm(gro.resid) # normal quantile plot
gro.qqline <- qqline(gro.resid) # adding a qline of comparison
hist(gro.resid) #plot histogram of residuals
boxplot(gro.resid~ All.Growth$Origin * All.Growth$Secondary* All.Growth$Timepoint, ylab = "residuals", las = 2, par(mar = c(12, 5, 4, 2)+ 0.1)) #view Origin variability
Growth.posthoc <- lsmeans(Growth.RM , specs=c("Timepoint","Origin","Secondary")) #calculate MS means
Growth.posthoc #view results
Growth.posthoc.p <- contrast(Growth.posthoc, method="pairwise", by=c("Timepoint")) #contrast treatment groups within a species at each time point
Growth.posthoc.p #view results
Growth.posthoc.lett <- cld(Growth.posthoc , alpha=.05, Letters=letters) #identify posthoc letter differences
Growth.posthoc.lett #view results
#####ALL FIGURES, TABLES, AND STATISTICAL RESULTS#####
setwd(file.path(mainDir, 'Output'))
#Capture Figures to File
pdf("Fig2.Larval.release.pdf", width = 11, height = 6)
inset <- viewport(width = 0.22, height = 0.5, x = 0.85, y = 0.6)  # the inset in upper right
grid.newpage()
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
pushViewport(viewport(layout = grid.layout(1, 3)))
print(Fig25, vp = vplayout(1, 1))
print(Fig26, vp = vplayout(1, 2))
print(Fig27, vp = vplayout(1, 3))
print(Fig28, vp = inset)
dev.off()
pdf("Fig3.Larval.Performance.pdf", width = 11, height = 6)
grid.newpage()
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
pushViewport(viewport(layout = grid.layout(2, 3)))
print(Fig29, vp = vplayout(1, 1))
print(Fig30, vp = vplayout(1, 2))
print(Fig31, vp = vplayout(1, 3))
print(Fig32, vp = vplayout(2, 1))
print(Fig33, vp = vplayout(2, 2))
print(Fig34, vp = vplayout(2, 3))
dev.off()
Larval.Perform <- arrangeGrob(Fig29, Fig30, Fig31,
Fig32, Fig33, Fig34, ncol=3)
ggsave(file="Fig3.Larval.Performance.pdf", Larval.Perform, width =12, height = 6, units = c("in"))
FigureS1.Physical <- arrangeGrob(Fig2, Fig3,
Fig5, Fig7,
Fig9, Fig11,
Fig13, Fig15, ncol=2)
ggsave(file="FigS1.Physical_Experimental_Conditions.pdf", FigureS1.Physical, width =8.5, height = 11, units = c("in"))
FigureS2.Chemical <- arrangeGrob(Fig17, Fig18,
Fig20, Fig21,
Fig23, Fig24, ncol=2)
ggsave(file="FigS2.Chemical_Experimental_Conditions.pdf", FigureS2.Chemical, width =8.5, height = 11, units = c("in"))
write.table(adult.chem.table, "Seawater_chemistry_table_Output_Adult.csv", sep=",", row.names = FALSE)
write.table(M1.chem.table, "Seawater_chemistry_table_Output_M1.csv", sep=",", row.names = FALSE)
write.table(M6.chem.table, "Seawater_chemistry_table_Output_M6.csv", sep=",", row.names = FALSE)
tt2 <- ttheme_minimal()
title1 <- "A) Adult Exposure"
title2 <- "B) Month 1 Exposure"
title3 <- "C) Month 6 Exposure"
t1 <- grid.text(title1, just="left")
t2 <- grid.text(title2, just="left")
t3 <- grid.text(title3, just="left")
SW.Chem.Tables <- grid.arrange(
t1,
tableGrob(adult.chem.table, theme=tt2),
t2,
tableGrob(M1.chem.table, theme=tt2),
t3,
tableGrob(M6.chem.table, theme=tt2),
nrow=6)
ggsave(file="SW.Chemistry.Table.pdf", SW.Chem.Tables, width = 11, height = 6)
#Capture statistical results to file
capture.output(june.ks, july.ks, august.ks, summary(Interaction), anova(sur.GLM), summary(set.GLM), anova(Growth.RM), file="HI_Pdam_Parental_Results.txt")
setwd(file.path(mainDir, 'Data'))
