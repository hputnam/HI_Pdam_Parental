##Riley, J. P., Deep-Sea Research 12:219-220, 1965
fH <- 1.2948 - 0.002036*Temp.Amb + (0.0004607 -  0.000001475*Temp.Amb)*(S^2) # the activity coefficient of the H+ ion, which is valid for the temperatures of 20-40°C
#Takahashi et al, Chapter 3 in GEOSECS Pacific Expedition, v. 3, 1982 (p. 80)
IonS <- (19.924*S)/(1000 - 1.005*S) # the ionic strength of Hydrogen Fluoride
##This is from the DOE handbook, Chapter 5, p. 13/22, eq. 7.2.4 and Zeebe Wolfgladrow Appendix A p260
lnKSO4 <- -4276.1/Temp.Amb + 141.328 - 23.093*log(Temp.Amb) +
(-13856/Temp.Amb + 324.57 - 47.986*log(Temp.Amb))*sqrt(IonS) +
(35474/Temp.Amb - 771.54 + 114.723*log(Temp.Amb))*IonS +
(-2698/Temp.Amb)*sqrt(IonS)*IonS + (1776/Temp.Amb)*IonS^2
KSO4 <- exp(lnKSO4)*(1-0.001005*S) #this is on the free pH scale in mol/kg-SW
#This is from the DOE handbook 1994 ORNL/CDIAC-74
lnKF <- 1590.2/Temp.Amb - 12.641 + 1.525*sqrt(IonS)
KF <- exp(lnKF)*(1-0.001005*S) #the dissociation constant of HF, this is on the free pH scale in mol/kg-H2O
#Dickson, A. G. and Riley, J. P., Marine Chemistry 7:89-99, 1979
#Conversion Functions
SWStoTOT.amb <- (1 + TS/KSO4)/(1 + TS/KSO4 + TF/KF) #pH scale conversion factor
NBStoTOT.amb <- pH.Amb-(log(SWStoTOT.amb)/log(0.1) + log(fH)/log(0.1))  #conversion for NBS to total
pH.Amb.Out <- data.frame(pH.data$Date.Time, pH.data$Tank4, pH.data$Ambient.NBS, NBStoTOT.amb) #create dataframe of pH and time
colnames(pH.Amb.Out) <- c("Date.Time", "Amb.Temp", "pH.Amb.NBS", "pH.Amb.TOTAL") #Rename columns to describe contents
#Convert pH from NBS to total scale for high tank
pH.High <- pH.data$High.NBS # pH data on NBS scale logged every 15 minutes
Temp.High <- pH.data$Tank5+273.15 # Temperature from Hobo loggers every 15 minutes that match pH measurement frequency converted to Kelvin
TS <- (0.14/96.062)*(S/1.80655) #concentration of SO4-2 in mol/kg-SW
##Morris, A. W., and Riley, J. P., Deep-Sea Research 13:699-705, 1966: this is .02824.*Sali./35. = .0008067.*Sali
TF <- (0.000067/18.998)*(S/1.80655) #concentration of fluoride in mol/kg-SW
##Riley, J. P., Deep-Sea Research 12:219-220, 1965
fH <- 1.2948 - 0.002036*Temp.High + (0.0004607 -  0.000001475*Temp.High)*(S^2) # the activity coefficient of the H+ ion, which is valid for the temperatures of 20-40°C
#Takahashi et al, Chapter 3 in GEOSECS Pacific Expedition, v. 3, 1982 (p. 80)
IonS <- (19.924*S)/(1000 - 1.005*S) # the ionic strength of Hydrogen Fluoride
##This is from the DOE handbook, Chapter 5, p. 13/22, eq. 7.2.4 and Zeebe Wolfgladrow Appendix A p260
lnKSO4 <- -4276.1/Temp.High + 141.328 - 23.093*log(Temp.High) +
(-13856/Temp.High + 324.57 - 47.986*log(Temp.High))*sqrt(IonS) +
(35474/Temp.High - 771.54 + 114.723*log(Temp.High))*IonS +
(-2698/Temp.High)*sqrt(IonS)*IonS + (1776/Temp.High)*IonS^2
KSO4 <- exp(lnKSO4)*(1-0.001005*S) #this is on the free pH scale in mol/kg-SW
#This is from the DOE handbook 1994 ORNL/CDIAC-74
lnKF <- 1590.2/Temp.High - 12.641 + 1.525*sqrt(IonS)
KF <- exp(lnKF)*(1-0.001005*S) #the dissociation constant of HF, this is on the free pH scale in mol/kg-H2O
#Dickson, A. G. and Riley, J. P., Marine Chemistry 7:89-99, 1979
Conversion Functions
SWStoTOT.high  <- (1 + TS/KSO4)/(1 + TS/KSO4 + TF/KF) #pH scale conversion factor
NBStoTOT.high <- pH.High-(log(SWStoTOT.high)/log(0.1) + log(fH)/log(0.1))  #conversion for NBS to total
pH.High.Out <- data.frame(pH.data$Date.Time, pH.data$Tank5, pH.data$High.NBS, NBStoTOT.high) #create dataframe of total pH, Temperature, and time
colnames(pH.High.Out) <- c("Date.Time", "High.Temp", "pH.High.NBS", "pH.High.TOTAL") #Rename columns to describe contents
pH.TOT <- cbind(pH.High.Out, pH.Amb.Out$Amb.Temp,  pH.Amb.Out$pH.Amb.NBS,  pH.Amb.Out$pH.Amb.TOTAL) #create dataframe of total pH and time
colnames(pH.TOT) <- c("Date.Time",  "High.Temp",	"pH.High.NBS",	"pH.High.TOTAL",	"Amb.Temp",	"pH.Amb.NBS",	"pH.Amb.TOTAL")
#Plot total pH for both treatments for adult exposure
Fig16 <- ggplot(pH.TOT) + #plot pH total scale
geom_line(aes(x = Date.Time, y = pH.High.TOTAL, col="High")) + #plot as a line
geom_line(aes(x = Date.Time, y = pH.Amb.TOTAL, col="Ambient")) + #plot as a line
xlab("Date") + #Label the X Axis
ylab("pH (Total Scale)") + #Label the Y Axis
ggtitle("All Tanks Total pH") + #Label the graph title
theme_bw() + #Set the background color
theme(axis.line = element_line(color = 'black'), #Set the axes color
panel.border = element_blank(), #Set the border
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background =element_blank(), #Set the plot background
legend.key = element_blank()) #Set plot legend key
Fig16 #View figure
pH.time <- format(as.POSIXct(pH.TOT$Date.Time) ,format = "%H:%M") #Identify time in hours and minutes
pH.TOT <- cbind(pH.TOT, pH.time) #Combine total pH and time
colnames(pH.TOT) <- c("Date.Time",  "High.Temp",  "pH.High.NBS",  "pH.High.TOTAL",	"Amb.Temp",	"pH.Amb.NBS",	"pH.Amb.TOTAL", "Time") #Rename columns to describe contents
quarterly.tank.pH.amb.mean <- aggregate(pH.Amb.TOTAL ~ Time, data=pH.TOT, mean, na.rm=TRUE) #calculate mean of pH for every 15 min interval
quarterly.tank.pH.amb.se <- aggregate(pH.Amb.TOTAL ~ Time, data=pH.TOT, std.error, na.rm=TRUE)  #calculate standard error of the mean of pH for every 15 min interval
quarterly.tank.pH.high.mean <- aggregate(pH.High.TOTAL ~ Time, data=pH.TOT, mean, na.rm=TRUE) #calculate mean of pH for every 15 min interval
quarterly.tank.pH.high.se <- aggregate(pH.High.TOTAL ~ Time, data=pH.TOT, std.error, na.rm=TRUE)  #calculate standard error of the mean of pH for every 15 min interval
tank.pH.means <- data.frame(quarterly.tank.pH.amb.mean, quarterly.tank.pH.amb.se$pH.Amb.TOTAL, quarterly.tank.pH.high.mean$pH.High.TOTAL, quarterly.tank.pH.high.se$pH.High.TOTAL) #combine mean and standard error results
colnames(tank.pH.means) <- c("Time", "pH.Amb.TOTAL.mean", "pH.Amb.TOTAL.se", "pH.High.TOTAL.mean", "pH.High.TOTAL.se")  #Rename columns to describe contents
Fig17 <- ggplot(tank.pH.means, aes(Time)) + # plot mean pH by tank
geom_point(aes(x =Time, y = pH.Amb.TOTAL.mean, colour="Ambient")) + #plot points
geom_errorbar(aes(x=Time, ymax=pH.Amb.TOTAL.mean+pH.Amb.TOTAL.se, ymin=pH.Amb.TOTAL.mean-pH.Amb.TOTAL.se), position=position_dodge(0.9), data=tank.pH.means) + #set values for standard error bars and offset on the X axis for clarity
geom_point(aes(x = Time, y = pH.High.TOTAL.mean, colour="High")) + #plot points
geom_errorbar(aes(x=Time, ymax=pH.High.TOTAL.mean+pH.High.TOTAL.se, ymin=pH.High.TOTAL.mean-pH.High.TOTAL.se), position=position_dodge(0.9), data=tank.pH.means) + #set values for standard error bars and offset on the X axis for clarity
scale_colour_manual("Treatment", values = c("blue","red")) +
scale_x_discrete(breaks=c("0:00", "06:00", "12:00", "18:00")) + #set discrete breaks on the X axis
scale_y_continuous(name="pH (Total Scale)", breaks=c( 7.4, 7.5, 7.6, 7.7, 7.8, 7.9), limits=c(7.30, 7.95)) + #set Y axis ticks
ggtitle("pH\nA) Adult Exposure") + #Label graph
xlab("Time") + #Label the X Axis
ylab("pH (Total Scale)") + #Label the Y Axis
theme_bw() + #Set the background color
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), #Set the text angle
axis.line = element_line(color = 'black'), #Set the axes color
panel.border = element_blank(), #Set the border
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background =element_blank(), #Set the plot background
legend.key = element_blank(), #Set plot legend key
plot.title=element_text(hjust=0), #Justify the title to the top left
legend.position='none') #remove legend background
Fig17 #View figure
#Generate dataframe and set parameters for seacarb calculations
For.seacarb <- pH.TOT[,c(1,2,4,5,7,8)] #create data frame of temp and total pH
For.seacarb$Salinity <- sal #set salinity from average of tanks
For.seacarb$TA.Amb <- TAs[1,2] #set TA from average of ambient tanks calculated above
For.seacarb$TA.High <- TAs[2,2] #set TA from average of high tanks calculated above
colnames(For.seacarb) <- c("Date.Time", "Temp.High", "pH.High.TOTAL",  "Temp.Amb", "pH.Amb.TOTAL", "Time", "Salinity",	"TA.Amb",	"TA.High") #Rename columns to describe contents
For.seacarb <- na.omit(For.seacarb) #omit missing values
#Calculate CO2 parameters using seacarb
carbo.high <- carb(flag=8, var1=For.seacarb$pH.High.TOTAL, var2=For.seacarb$TA.High/1000000, S= For.seacarb$Salinity, T=For.seacarb$Temp.High, P=0, Pt=0, Sit=0, pHscale="T", kf="pf", k1k2="l", ks="d") #calculate seawater chemistry parameters using seacarb
carbo.amb <- carb(flag=8, var1=For.seacarb$pH.Amb.TOTAL, var2=For.seacarb$TA.Amb/1000000, S= For.seacarb$Salinity, T=For.seacarb$Temp.Amb, P=0, Pt=0, Sit=0, pHscale="T", kf="pf", k1k2="l", ks="d") #calculate seawater chemistry parameters using seacarb
pCO2 <- data.frame(For.seacarb$Date.Time, For.seacarb$Time, carbo.amb$pCO2, carbo.high$pCO2) #make dataframe of CO2 output
colnames(pCO2) <- c("Date.Time", "Time", "pCO2.Amb", "pCO2.High") #Rename columns to describe contents
quarterly.tank.pCO2.amb.mean <- aggregate(pCO2.Amb ~ Time, data=pCO2, mean, na.rm=TRUE) #calculate mean of pCO2 for every 15 min interval
quarterly.tank.pCO2.amb.se <- aggregate(pCO2.Amb ~ Time, data=pCO2, std.error, na.rm=TRUE)  #calculate standard error of the mean of pCO2 for every 15 min interval
quarterly.tank.pCO2.high.mean <- aggregate(pCO2.High ~ Time, data=pCO2, mean, na.rm=TRUE) #calculate mean of pCO2 for every 15 min interval
quarterly.tank.pCO2.high.se <- aggregate(pCO2.High ~ Time, data=pCO2, std.error, na.rm=TRUE)  #calculate standard error of the mean of pCO2 for every 15 min interval
tank.pCO2.means <- data.frame(quarterly.tank.pCO2.amb.mean, quarterly.tank.pCO2.amb.se$pCO2.Amb, quarterly.tank.pCO2.high.mean$pCO2.High, quarterly.tank.pCO2.high.se$pCO2.High) #combine mean and standard error results
colnames(tank.pCO2.means) <- c("Time", "Amb.mean", "Amb.se", "High.mean", "High.se") #Rename columns to describe contents
#plotting averages of pCO2 every 15 min for a 1 day cycle from all data
Fig18 <- ggplot(tank.pCO2.means) + #plot pCO2
geom_point(aes(x = Time, y = Amb.mean, colour="Ambient")) + #plot as line
geom_errorbar(aes(x=Time, ymax=Amb.mean+Amb.se, ymin=Amb.mean-Amb.se), position=position_dodge(0.9), data=tank.pCO2.means) + #plot error bars
geom_point(aes(x = Time, y = High.mean, colour="High")) + #plot as line
geom_errorbar(aes(x=Time, ymax=High.mean+High.se, ymin=High.mean-High.se), position=position_dodge(0.9), data=tank.pCO2.means) + #plot error bars
scale_colour_manual("Treatment", values = c("blue","red")) + #Set colors for treatments
scale_x_discrete(breaks=c("0:00", "06:00", "12:00", "18:00")) + #set discrete breaks on the X axis
ggtitle("pCO2\nD) Adult Exposure") + #Label graph
xlab("Time") + #Label the X Axis
ylab(expression(paste('p',CO[2], ' (µatm)', sep=''))) + #Label the Y Axis
ylim(500,2600) + #set y axis limits
theme_bw() + #Set the background color
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), #Set the text angle
axis.line = element_line(color = 'black'), #Set the axes color
panel.border = element_blank(), #Set the border
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background =element_blank(), #Set the plot background
legend.key = element_blank(), #Set plot legend key
plot.title=element_text(hjust=0), #Justify the title to the top left
legend.position='none') #remove legend background
Fig18 #View figure
setwd(file.path(mainDir, 'Output'))
FigureS2.Chemical <- arrangeGrob(Fig17, Fig18,
Fig20, Fig21,
Fig23, Fig24, ncol=2)
ggsave(file="FigS2.Chemical_Experimental_Conditions.pdf", FigureS2.Chemical, width =8.5, height = 11, units = c("in"))
#Tank pH Data for Larval Month 1 Exposure Period (12July - 25Aug14)
# read in NBS pH data from Aquacontrollers frequency 15min
pHs.M1 <- read.csv("Month1_Tank_NBS_pH.csv", header=TRUE, sep=",", na.strings="NA") #load data with a header, separated by commas, with NA as NA
mydate.pHs.M1 <- strptime(pHs.M1$Date.Time, format="%m/%d/%y %H:%M") #Identify date format
tank.pHdata.M1 <-data.frame(mydate.pHs.M1, pHs.M1$Tank4, pHs.M1$Tank5) #make a dataframe of temperature and time
colnames(tank.pHdata.M1) <- c("Date.Time", "Ambient.NBS", "High.NBS") #Rename columns to describe contents
pH.data.M1 <- merge(tank.pHdata.M1, M1.tank.tempdata, by="Date.Time") #merge data sets by time and date
setwd(file.path(mainDir, 'Data'))
#Tank pH Data for Larval Month 1 Exposure Period (12July - 25Aug14)
# read in NBS pH data from Aquacontrollers frequency 15min
pHs.M1 <- read.csv("Month1_Tank_NBS_pH.csv", header=TRUE, sep=",", na.strings="NA") #load data with a header, separated by commas, with NA as NA
mydate.pHs.M1 <- strptime(pHs.M1$Date.Time, format="%m/%d/%y %H:%M") #Identify date format
tank.pHdata.M1 <-data.frame(mydate.pHs.M1, pHs.M1$Tank4, pHs.M1$Tank5) #make a dataframe of temperature and time
colnames(tank.pHdata.M1) <- c("Date.Time", "Ambient.NBS", "High.NBS") #Rename columns to describe contents
pH.data.M1 <- merge(tank.pHdata.M1, M1.tank.tempdata, by="Date.Time") #merge data sets by time and date
#Convert pH from NBS to total scale for ambient tank
pH.Amb.M1 <- pH.data.M1$Ambient.NBS # pH data on NBS scale logged every 15 minutes
Temp.Amb.M1 <- pH.data.M1$Tank4+273.15 # Temperature from Hobo loggers every 15 minutes that match pH measurement frequency
#S <- sal # salinity measured daily with YSI meter calibrated to conductivity standard at 25°C
TS <- (0.14/96.062)*(S/1.80655) #concentration of SO4-2 in mol/kg-SW
##Morris, A. W., and Riley, J. P., Deep-Sea Research 13:699-705, 1966: this is .02824.*Sali./35. = .0008067.*Sali
TF <- (0.000067/18.998)*(S/1.80655) #concentration of fluoride in mol/kg-SW
##Riley, J. P., Deep-Sea Research 12:219-220, 1965
fH <- 1.2948 - 0.002036*Temp.Amb.M1 + (0.0004607 -  0.000001475*Temp.Amb.M1)*(S^2) # the activity coefficient of the H+ ion, which is valid for the temperatures of 20-40°C
#Takahashi et al, Chapter 3 in GEOSECS Pacific Expedition, v. 3, 1982 (p. 80)
IonS <- (19.924*S)/(1000 - 1.005*S) # the ionic strength of Hydrogen Fluoride
##This is from the DOE handbook, Chapter 5, p. 13/22, eq. 7.2.4 and Zeebe Wolfgladrow Appendix A p260
lnKSO4 <- -4276.1/Temp.Amb.M1 + 141.328 - 23.093*log(Temp.Amb.M1) +
(-13856/Temp.Amb.M1 + 324.57 - 47.986*log(Temp.Amb.M1))*sqrt(IonS) +
(35474/Temp.Amb.M1 - 771.54 + 114.723*log(Temp.Amb.M1))*IonS +
(-2698/Temp.Amb.M1)*sqrt(IonS)*IonS + (1776/Temp.Amb.M1)*IonS^2
KSO4 <- exp(lnKSO4)*(1-0.001005*S) #this is on the free pH scale in mol/kg-SW
#This is from the DOE handbook 1994 ORNL/CDIAC-74
lnKF <- 1590.2/Temp.Amb.M1 - 12.641 + 1.525*sqrt(IonS)
KF <- exp(lnKF)*(1-0.001005*S) #the dissociation constant of HF, this is on the free pH scale in mol/kg-H2O
#Dickson, A. G. and Riley, J. P., Marine Chemistry 7:89-99, 1979
#Conversion Functions
SWStoTOT.amb.M1 <- (1 + TS/KSO4)/(1 + TS/KSO4 + TF/KF) #pH scale conversion factor
NBStoTOT.amb.M1 <- pH.Amb.M1-(log(SWStoTOT.amb.M1)/log(0.1) + log(fH)/log(0.1))  #conversion for NBS to total
pH.Amb.Out.M1 <- data.frame(pH.data.M1$Date.Time, pH.data.M1$Tank4, pH.data.M1$Ambient.NBS, NBStoTOT.amb.M1) #create dataframe of pH and time
colnames(pH.Amb.Out.M1) <- c("Date.Time", "Amb.Temp", "pH.Amb.NBS", "pH.Amb.TOTAL") #Rename columns to describe contents
#Convert pH from NBS to total scale for high tank
pH.High.M1 <- pH.data.M1$High.NBS # pH data on NBS scale logged every 15 minutes
Temp.High.M1 <- pH.data.M1$Tank5+273.15 # Temperature from Hobo loggers every 15 minutes that match pH measurement frequency converted to Kelvin
TS <- (0.14/96.062)*(S/1.80655) #concentration of SO4-2 in mol/kg-SW
##Morris, A. W., and Riley, J. P., Deep-Sea Research 13:699-705, 1966: this is .02824.*Sali./35. = .0008067.*Sali
TF <- (0.000067/18.998)*(S/1.80655) #concentration of fluoride in mol/kg-SW
##Riley, J. P., Deep-Sea Research 12:219-220, 1965
fH <- 1.2948 - 0.002036*Temp.High.M1 + (0.0004607 -  0.000001475*Temp.High.M1)*(S^2) # the activity coefficient of the H+ ion, which is valid for the temperatures of 20-40°C
#Takahashi et al, Chapter 3 in GEOSECS Pacific Expedition, v. 3, 1982 (p. 80)
IonS <- (19.924*S)/(1000 - 1.005*S) # the ionic strength of Hydrogen Fluoride
##This is from the DOE handbook, Chapter 5, p. 13/22, eq. 7.2.4 and Zeebe Wolfgladrow Appendix A p260
lnKSO4 <- -4276.1/Temp.High.M1 + 141.328 - 23.093*log(Temp.High.M1) +
(-13856/Temp.High.M1 + 324.57 - 47.986*log(Temp.High.M1))*sqrt(IonS) +
(35474/Temp.High.M1 - 771.54 + 114.723*log(Temp.High.M1))*IonS +
(-2698/Temp.High.M1)*sqrt(IonS)*IonS + (1776/Temp.High.M1)*IonS^2
KSO4 <- exp(lnKSO4)*(1-0.001005*S) #this is on the free pH scale in mol/kg-SW
#This is from the DOE handbook 1994 ORNL/CDIAC-74
lnKF <- 1590.2/Temp.High.M1 - 12.641 + 1.525*sqrt(IonS)
KF <- exp(lnKF)*(1-0.001005*S) #the dissociation constant of HF, this is on the free pH scale in mol/kg-H2O
#Dickson, A. G. and Riley, J. P., Marine Chemistry 7:89-99, 1979
#Conversion Functions
SWStoTOT.high.M1  <- (1 + TS/KSO4)/(1 + TS/KSO4 + TF/KF) #pH scale conversion factor
NBStoTOT.high.M1 <- pH.High.M1-(log(SWStoTOT.high.M1)/log(0.1) + log(fH)/log(0.1))  #conversion for NBS to total
pH.High.Out.M1 <- data.frame(pH.data.M1$Date.Time, pH.data.M1$Tank5, pH.data.M1$High.NBS, NBStoTOT.high.M1) #create dataframe of total pH, Temperature, and time
colnames(pH.High.Out.M1) <- c("Date.Time", "High.Temp", "pH.High.NBS", "pH.High.TOTAL") #Rename columns to describe contents
pH.TOT.M1 <- cbind(pH.High.Out.M1, pH.Amb.Out.M1$Amb.Temp,  pH.Amb.Out.M1$pH.Amb.NBS,  pH.Amb.Out.M1$pH.Amb.TOTAL) #create dataframe of total pH and time
colnames(pH.TOT.M1) <- c("Date.Time",  "High.Temp",  "pH.High.NBS",	"pH.High.TOTAL",	"Amb.Temp",	"pH.Amb.NBS",	"pH.Amb.TOTAL")
#Plot total pH for both treatments for duration of M1
Fig19 <- ggplot(pH.TOT.M1) + #plot pH total scale
geom_line(aes(x = Date.Time, y = pH.High.TOTAL, col="High")) + #plot as a line
geom_line(aes(x = Date.Time, y = pH.Amb.TOTAL, col="Ambient")) + #plot as a line
xlab("Date") + #Label the X Axis
ylab("pH (Total Scale)") + #Label the Y Axis
ggtitle("All Tanks Total pH") + #Label the graph title
theme_bw() + #Set the background color
theme(axis.line = element_line(color = 'black'), #Set the axes color
panel.border = element_blank(), #Set the border
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background =element_blank(), #Set the plot background
legend.key = element_blank()) #Set plot legend key
Fig19 #View figure
pH.time.M1 <- format(as.POSIXct(pH.TOT.M1$Date.Time) ,format = "%H:%M") #Identify time in hours and minutes
pH.TOT.M1 <- cbind(pH.TOT.M1, pH.time.M1) #Combine total pH and time
colnames(pH.TOT.M1) <- c("Date.Time",  "High.Temp",  "pH.High.NBS",  "pH.High.TOTAL",	"Amb.Temp",	"pH.Amb.NBS",	"pH.Amb.TOTAL", "Time") #Rename columns to describe contents
quarterly.tank.pH.amb.mean <- aggregate(pH.Amb.TOTAL ~ Time, data=pH.TOT.M1, mean, na.rm=TRUE) #calculate mean of pH for every 15 min interval
quarterly.tank.pH.amb.se <- aggregate(pH.Amb.TOTAL ~ Time, data=pH.TOT.M1, std.error, na.rm=TRUE)  #calculate standard error of the mean of pH for every 15 min interval
quarterly.tank.pH.high.mean <- aggregate(pH.High.TOTAL ~ Time, data=pH.TOT.M1, mean, na.rm=TRUE) #calculate mean of pH for every 15 min interval
quarterly.tank.pH.high.se <- aggregate(pH.High.TOTAL ~ Time, data=pH.TOT.M1, std.error, na.rm=TRUE)  #calculate standard error of the mean of pH for every 15 min interval
tank.pH.means.M1 <- data.frame(quarterly.tank.pH.amb.mean, quarterly.tank.pH.amb.se$pH.Amb.TOTAL, quarterly.tank.pH.high.mean$pH.High.TOTAL, quarterly.tank.pH.high.se$pH.High.TOTAL) #combine mean and standard error results
colnames(tank.pH.means.M1) <- c("Time", "pH.Amb.TOTAL.mean", "pH.Amb.TOTAL.se", "pH.High.TOTAL.mean", "pH.High.TOTAL.se")  #Rename columns to describe contents
Fig20 <- ggplot(tank.pH.means.M1, aes(Time)) + # plot mean pH by tank
geom_point(aes(x =Time, y = pH.Amb.TOTAL.mean, colour="Ambient")) + #plot points
geom_errorbar(aes(x=Time, ymax=pH.Amb.TOTAL.mean+pH.Amb.TOTAL.se, ymin=pH.Amb.TOTAL.mean-pH.Amb.TOTAL.se), position=position_dodge(0.9), data=tank.pH.means.M1) + #set values for standard error bars and offset on the X axis for clarity
geom_point(aes(x = Time, y = pH.High.TOTAL.mean, colour="High")) + #plot points
geom_errorbar(aes(x=Time, ymax=pH.High.TOTAL.mean+pH.High.TOTAL.se, ymin=pH.High.TOTAL.mean-pH.High.TOTAL.se), position=position_dodge(0.9), data=tank.pH.means.M1) + #set values for standard error bars and offset on the X axis for clarity
scale_colour_manual("Treatment", values = c("blue","red")) +
scale_x_discrete(breaks=c("0:00", "06:00", "12:00", "18:00")) + #set discrete breaks on the X axis
scale_y_continuous(name="pH (Total Scale)", breaks=c( 7.4, 7.5, 7.6, 7.7, 7.8, 7.9), limits=c(7.30, 7.95)) + #set Y axis ticks
ggtitle("B) Month 1 Larval Exposure") + #Label graph
xlab("Time") + #Label the X Axis
ylab("pH (Total Scale)") + #Label the Y Axis
theme_bw() + #Set the background color
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), #Set the text angle
axis.line = element_line(color = 'black'), #Set the axes color
panel.border = element_blank(), #Set the border
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background =element_blank(), #Set the plot background
legend.key = element_blank(), #Set plot legend key
plot.title=element_text(hjust=0), #Justify the title to the top left
legend.position='none') #remove legend background
Fig20 #View figure
#Generate dataframe and set parameters for seacarb calculations
For.seacarb <- pH.TOT.M1[,c(1,2,4,5,7,8)] #create data frame of temp and total pH
For.seacarb$Salinity <- sal #set salinity from average of tanks
For.seacarb$TA.Amb <- TAs[1,2] #set TA from average of ambient tanks calculated above
For.seacarb$TA.High <- TAs[2,2] #set TA from average of high tanks calculated above
colnames(For.seacarb) <- c("Date.Time", "Temp.High", "pH.High.TOTAL",  "Temp.Amb", "pH.Amb.TOTAL", "Time", "Salinity",	"TA.Amb",	"TA.High") #Rename columns to describe contents
For.seacarb <- na.omit(For.seacarb) #omit missing values
#Calculate CO2 parameters using seacarb
carbo.high.M1 <- carb(flag=8, var1=For.seacarb$pH.High.TOTAL, var2=For.seacarb$TA.High/1000000, S= For.seacarb$Salinity, T=For.seacarb$Temp.High, P=0, Pt=0, Sit=0, pHscale="T", kf="pf", k1k2="l", ks="d") #calculate seawater chemistry parameters using seacarb
carbo.amb.M1 <- carb(flag=8, var1=For.seacarb$pH.Amb.TOTAL, var2=For.seacarb$TA.Amb/1000000, S= For.seacarb$Salinity, T=For.seacarb$Temp.Amb, P=0, Pt=0, Sit=0, pHscale="T", kf="pf", k1k2="l", ks="d") #calculate seawater chemistry parameters using seacarb
pCO2.M1 <- data.frame(For.seacarb$Date.Time, For.seacarb$Time, carbo.amb.M1$pCO2, carbo.high.M1$pCO2) #make dataframe of CO2 output
colnames(pCO2.M1) <- c("Date.Time", "Time", "pCO2.Amb", "pCO2.High") #Rename columns to describe contents
quarterly.tank.pCO2.amb.mean <- aggregate(pCO2.Amb ~ Time, data=pCO2.M1, mean, na.rm=TRUE) #calculate mean of pCO2 for every 15 min interval
quarterly.tank.pCO2.amb.se <- aggregate(pCO2.Amb ~ Time, data=pCO2.M1, std.error, na.rm=TRUE)  #calculate standard error of the mean of pCO2 for every 15 min interval
quarterly.tank.pCO2.high.mean <- aggregate(pCO2.High ~ Time, data=pCO2.M1, mean, na.rm=TRUE) #calculate mean of pCO2 for every 15 min interval
quarterly.tank.pCO2.high.se <- aggregate(pCO2.High ~ Time, data=pCO2.M1, std.error, na.rm=TRUE)  #calculate standard error of the mean of pCO2 for every 15 min interval
tank.pCO2.means.M1 <- data.frame(quarterly.tank.pCO2.amb.mean, quarterly.tank.pCO2.amb.se$pCO2.Amb, quarterly.tank.pCO2.high.mean$pCO2.High, quarterly.tank.pCO2.high.se$pCO2.High) #combine mean and standard error results
colnames(tank.pCO2.means.M1) <- c("Time", "Amb.mean", "Amb.se", "High.mean", "High.se") #Rename columns to describe contents
#plotting averages of total pCO2 every 15 min for a 1 day cycle from all data
Fig21 <- ggplot(tank.pCO2.means.M1) + #plot pCO2
geom_point(aes(x = Time, y = Amb.mean, colour="Ambient")) + #plot as line
geom_errorbar(aes(x=Time, ymax=Amb.mean+Amb.se, ymin=Amb.mean-Amb.se), position=position_dodge(0.9), data=tank.pCO2.means.M1) + #plot error bars
geom_point(aes(x = Time, y = High.mean, colour="High")) + #plot as line
geom_errorbar(aes(x=Time, ymax=High.mean+High.se, ymin=High.mean-High.se), position=position_dodge(0.9), data=tank.pCO2.means.M1) + #plot error bars
scale_colour_manual("Treatment", values = c("blue","red")) + #Set colors for treatments
scale_x_discrete(breaks=c("0:00", "06:00", "12:00", "18:00")) + #set discrete breaks on the X axis
ggtitle("E) Month 1 Larval Exposure") + #Label graph
xlab("Time") + #Label the X Axis
ylab(expression(paste('p',CO[2], ' (µatm)', sep=''))) + #Label the Y Axis
ylim(500,2600) + #set y axis limits
theme_bw() + #Set the background color
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), #Set the text angle
axis.line = element_line(color = 'black'), #Set the axes color
panel.border = element_blank(), #Set the border
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background =element_blank(), #Set the plot background
legend.key = element_blank(), #Set plot legend key
plot.title=element_text(hjust=0), #Justify the title to the top left
legend.position='none') #remove legend background
Fig21 #View figure
#Tank pH Data for Larval Month 6 Exposure Period (12July - 28January15)
# read in NBS pH data from Aquacontrollers frequency 15min
pHs.M6 <- read.csv("Month6_Tank_NBS_pH.csv", header=TRUE, sep=",", na.strings="NA") #load data with a header, separated by commas, with NA as NA
mydate.pHs.M6 <- strptime(pHs.M6$Date.Time, format="%m/%d/%y %H:%M") #Identify date format
tank.pHdata.M6 <-data.frame(mydate.pHs.M6, pHs.M6$Tank4, pHs.M6$Tank5) #make a dataframe of temperature and time
colnames(tank.pHdata.M6) <- c("Date.Time", "Ambient.NBS", "High.NBS") #Rename columns to describe contents
pH.data.M6 <- merge(tank.pHdata.M6, M6.tank.tempdata, by="Date.Time") #merge data sets by time and date
#Convert pH from NBS to total scale for ambient tank
pH.Amb.M6 <- pH.data.M6$Ambient.NBS # pH data on NBS scale logged every 15 minutes
Temp.Amb.M6 <- pH.data.M6$Tank4+273.15 # Temperature from Hobo loggers every 15 minutes that match pH measurement frequency
#S <- sal # salinity measured daily with YSI meter calibrated to conductivity standard at 25°C
TS <- (0.14/96.062)*(S/1.80655) #concentration of SO4-2 in mol/kg-SW
##Morris, A. W., and Riley, J. P., Deep-Sea Research 13:699-705, 1966: this is .02824.*Sali./35. = .0008067.*Sali
TF <- (0.000067/18.998)*(S/1.80655) #concentration of fluoride in mol/kg-SW
##Riley, J. P., Deep-Sea Research 12:219-220, 1965
fH <- 1.2948 - 0.002036*Temp.Amb.M6 + (0.0004607 -  0.000001475*Temp.Amb.M6)*(S^2) # the activity coefficient of the H+ ion, which is valid for the temperatures of 20-40°C
#Takahashi et al, Chapter 3 in GEOSECS Pacific Expedition, v. 3, 1982 (p. 80)
IonS <- (19.924*S)/(1000 - 1.005*S) # the ionic strength of Hydrogen Fluoride
##This is from the DOE handbook, Chapter 5, p. 13/22, eq. 7.2.4 and Zeebe Wolfgladrow Appendix A p260
lnKSO4 <- -4276.1/Temp.Amb.M6 + 141.328 - 23.093*log(Temp.Amb.M6) +
(-13856/Temp.Amb.M6 + 324.57 - 47.986*log(Temp.Amb.M6))*sqrt(IonS) +
(35474/Temp.Amb.M6 - 771.54 + 114.723*log(Temp.Amb.M6))*IonS +
(-2698/Temp.Amb.M6)*sqrt(IonS)*IonS + (1776/Temp.Amb.M6)*IonS^2
KSO4 <- exp(lnKSO4)*(1-0.001005*S) #this is on the free pH scale in mol/kg-SW
#This is from the DOE handbook 1994 ORNL/CDIAC-74
lnKF <- 1590.2/Temp.Amb.M6 - 12.641 + 1.525*sqrt(IonS)
KF <- exp(lnKF)*(1-0.001005*S) #the dissociation constant of HF, this is on the free pH scale in mol/kg-H2O
#Dickson, A. G. and Riley, J. P., Marine Chemistry 7:89-99, 1979
#Conversion Functions
SWStoTOT.amb.M6 <- (1 + TS/KSO4)/(1 + TS/KSO4 + TF/KF) #pH scale conversion factor
NBStoTOT.amb.M6 <- pH.Amb.M6-(log(SWStoTOT.amb.M6)/log(0.1) + log(fH)/log(0.1))  #conversion for NBS to total
pH.Amb.Out.M6 <- data.frame(pH.data.M6$Date.Time, pH.data.M6$Tank4, pH.data.M6$Ambient.NBS, NBStoTOT.amb.M6) #create dataframe of pH and time
colnames(pH.Amb.Out.M6) <- c("Date.Time", "Amb.Temp", "pH.Amb.NBS", "pH.Amb.TOTAL") #Rename columns to describe contents
#Convert pH from NBS to total scale for high tank
pH.High.M6 <- pH.data.M6$High.NBS # pH data on NBS scale logged every 15 minutes
Temp.High.M6 <- pH.data.M6$Tank5+273.15 # Temperature from Hobo loggers every 15 minutes that match pH measurement frequency converted to Kelvin
TS <- (0.14/96.062)*(S/1.80655) #concentration of SO4-2 in mol/kg-SW
##Morris, A. W., and Riley, J. P., Deep-Sea Research 13:699-705, 1966: this is .02824.*Sali./35. = .0008067.*Sali
TF <- (0.000067/18.998)*(S/1.80655) #concentration of fluoride in mol/kg-SW
##Riley, J. P., Deep-Sea Research 12:219-220, 1965
fH <- 1.2948 - 0.002036*Temp.High.M6 + (0.0004607 -  0.000001475*Temp.High.M6)*(S^2) # the activity coefficient of the H+ ion, which is valid for the temperatures of 20-40°C
#Takahashi et al, Chapter 3 in GEOSECS Pacific Expedition, v. 3, 1982 (p. 80)
IonS <- (19.924*S)/(1000 - 1.005*S) # the ionic strength of Hydrogen Fluoride
##This is from the DOE handbook, Chapter 5, p. 13/22, eq. 7.2.4 and Zeebe Wolfgladrow Appendix A p260
lnKSO4 <- -4276.1/Temp.High.M6 + 141.328 - 23.093*log(Temp.High.M6) +
(-13856/Temp.High.M6 + 324.57 - 47.986*log(Temp.High.M6))*sqrt(IonS) +
(35474/Temp.High.M6 - 771.54 + 114.723*log(Temp.High.M6))*IonS +
(-2698/Temp.High.M6)*sqrt(IonS)*IonS + (1776/Temp.High.M6)*IonS^2
KSO4 <- exp(lnKSO4)*(1-0.001005*S) #this is on the free pH scale in mol/kg-SW
#This is from the DOE handbook 1994 ORNL/CDIAC-74
lnKF <- 1590.2/Temp.High.M6 - 12.641 + 1.525*sqrt(IonS)
KF <- exp(lnKF)*(1-0.001005*S) #the dissociation constant of HF, this is on the free pH scale in mol/kg-H2O
#Dickson, A. G. and Riley, J. P., Marine Chemistry 7:89-99, 1979
#Conversion Functions
SWStoTOT.high.M6  <- (1 + TS/KSO4)/(1 + TS/KSO4 + TF/KF) #pH scale conversion factor
NBStoTOT.high.M6 <- pH.High.M6-(log(SWStoTOT.high.M6)/log(0.1) + log(fH)/log(0.1))  #conversion for NBS to total
pH.High.Out.M6 <- data.frame(pH.data.M6$Date.Time, pH.data.M6$Tank5, pH.data.M6$High.NBS, NBStoTOT.high.M6) #create dataframe of total pH, Temperature, and time
colnames(pH.High.Out.M6) <- c("Date.Time", "High.Temp", "pH.High.NBS", "pH.High.TOTAL") #Rename columns to describe contents
pH.TOT.M6 <- cbind(pH.High.Out.M6, pH.Amb.Out.M6$Amb.Temp,  pH.Amb.Out.M6$pH.Amb.NBS,  pH.Amb.Out.M6$pH.Amb.TOTAL) #create dataframe of total pH and time
colnames(pH.TOT.M6) <- c("Date.Time",  "High.Temp",  "pH.High.NBS",  "pH.High.TOTAL",	"Amb.Temp",	"pH.Amb.NBS",	"pH.Amb.TOTAL")
#Plot total pH for both treatments for duration of experiment
Fig22 <- ggplot(pH.TOT.M6) + #plot pH total scale
geom_line(aes(x = Date.Time, y = pH.High.TOTAL, col="High")) + #plot as a line
geom_line(aes(x = Date.Time, y = pH.Amb.TOTAL, col="Ambient")) + #plot as a line
xlab("Date") + #Label the X Axis
ylab("pH (Total Scale)") + #Label the Y Axis
ggtitle("All Tanks Total pH") + #Label the graph title
theme_bw() + #Set the background color
theme(axis.line = element_line(color = 'black'), #Set the axes color
panel.border = element_blank(), #Set the border
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background =element_blank(), #Set the plot background
legend.key = element_blank()) #Set plot legend key
Fig22 #View figure
pH.time.M6 <- format(as.POSIXct(pH.TOT.M6$Date.Time) ,format = "%H:%M") #Identify time in hours and minutes
pH.TOT.M6 <- cbind(pH.TOT.M6, pH.time.M6) #Combine total pH and time
colnames(pH.TOT.M6) <- c("Date.Time",  "High.Temp",  "pH.High.NBS",  "pH.High.TOTAL",	"Amb.Temp",	"pH.Amb.NBS",	"pH.Amb.TOTAL", "Time") #Rename columns to describe contents
quarterly.tank.pH.amb.mean <- aggregate(pH.Amb.TOTAL ~ Time, data=pH.TOT.M6, mean, na.rm=TRUE) #calculate mean of pH for every 15 min interval
quarterly.tank.pH.amb.se <- aggregate(pH.Amb.TOTAL ~ Time, data=pH.TOT.M6, std.error, na.rm=TRUE)  #calculate standard error of the mean of pH for every 15 min interval
quarterly.tank.pH.high.mean <- aggregate(pH.High.TOTAL ~ Time, data=pH.TOT.M6, mean, na.rm=TRUE) #calculate mean of pH for every 15 min interval
quarterly.tank.pH.high.se <- aggregate(pH.High.TOTAL ~ Time, data=pH.TOT.M6, std.error, na.rm=TRUE)  #calculate standard error of the mean of pH for every 15 min interval
tank.pH.means.M6 <- data.frame(quarterly.tank.pH.amb.mean, quarterly.tank.pH.amb.se$pH.Amb.TOTAL, quarterly.tank.pH.high.mean$pH.High.TOTAL, quarterly.tank.pH.high.se$pH.High.TOTAL) #combine mean and standard error results
colnames(tank.pH.means.M6) <- c("Time", "pH.Amb.TOTAL.mean", "pH.Amb.TOTAL.se", "pH.High.TOTAL.mean", "pH.High.TOTAL.se")  #Rename columns to describe contents
Fig23 <- ggplot(tank.pH.means.M6, aes(Time)) + # plot mean pH by tank
geom_point(aes(x =Time, y = pH.Amb.TOTAL.mean, colour="Ambient")) + #plot points
geom_errorbar(aes(x=Time, ymax=pH.Amb.TOTAL.mean+pH.Amb.TOTAL.se, ymin=pH.Amb.TOTAL.mean-pH.Amb.TOTAL.se), position=position_dodge(0.9), data=tank.pH.means.M6) + #set values for standard error bars and offset on the X axis for clarity
geom_point(aes(x = Time, y = pH.High.TOTAL.mean, colour="High")) + #plot points
geom_errorbar(aes(x=Time, ymax=pH.High.TOTAL.mean+pH.High.TOTAL.se, ymin=pH.High.TOTAL.mean-pH.High.TOTAL.se), position=position_dodge(0.9), data=tank.pH.means.M6) + #set values for standard error bars and offset on the X axis for clarity
scale_colour_manual("Treatment", values = c("blue","red")) +
scale_x_discrete(breaks=c("0:00", "06:00", "12:00", "18:00")) + #set discrete breaks on the X axis
scale_y_continuous(name="pH (Total Scale)", breaks=c( 7.4, 7.5, 7.6, 7.7, 7.8, 7.9), limits=c(7.30, 7.95)) + #set Y axis ticks
ggtitle("C) Month 6 Larval Exposure") + #Label graph
xlab("Time") + #Label the X Axis
ylab("pH (Total Scale)") + #Label the Y Axis
theme_bw() + #Set the background color
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), #Set the text angle
axis.line = element_line(color = 'black'), #Set the axes color
panel.border = element_blank(), #Set the border
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background =element_blank(), #Set the plot background
legend.key = element_blank(), #Set plot legend key
plot.title=element_text(hjust=0), #Justify the title to the top left
legend.position='none') #remove legend background
Fig23 #View figure
#Generate dataframe and set parameters for seacarb calculations
For.seacarb <- pH.TOT.M6[,c(1,2,4,5,7,8)] #create data frame of temp and total pH
For.seacarb$Salinity <- sal #set salinity from average of tanks
For.seacarb$TA.Amb <- TAs[1,2] #set TA from average of ambient tanks calculated above
For.seacarb$TA.High <- TAs[2,2] #set TA from average of high tanks calculated above
colnames(For.seacarb) <- c("Date.Time", "Temp.High", "pH.High.TOTAL",  "Temp.Amb", "pH.Amb.TOTAL", "Time", "Salinity",	"TA.Amb",	"TA.High") #Rename columns to describe contents
For.seacarb <- na.omit(For.seacarb) #omit missing values
#Calculate CO2 parameters using seacarb
carbo.high.M6 <- carb(flag=8, var1=For.seacarb$pH.High.TOTAL, var2=For.seacarb$TA.High/1000000, S= For.seacarb$Salinity, T=For.seacarb$Temp.High, P=0, Pt=0, Sit=0, pHscale="T", kf="pf", k1k2="l", ks="d") #calculate seawater chemistry parameters using seacarb
carbo.amb.M6 <- carb(flag=8, var1=For.seacarb$pH.Amb.TOTAL, var2=For.seacarb$TA.Amb/1000000, S= For.seacarb$Salinity, T=For.seacarb$Temp.Amb, P=0, Pt=0, Sit=0, pHscale="T", kf="pf", k1k2="l", ks="d") #calculate seawater chemistry parameters using seacarb
pCO2.M6 <- data.frame(For.seacarb$Date.Time, For.seacarb$Time, carbo.amb.M6$pCO2, carbo.high.M6$pCO2) #make dataframe of CO2 output
colnames(pCO2.M6) <- c("Date.Time", "Time", "pCO2.Amb", "pCO2.High") #Rename columns to describe contents
quarterly.tank.pCO2.amb.mean <- aggregate(pCO2.Amb ~ Time, data=pCO2.M6, mean, na.rm=TRUE) #calculate mean of pCO2 for every 15 min interval
quarterly.tank.pCO2.amb.se <- aggregate(pCO2.Amb ~ Time, data=pCO2.M6, std.error, na.rm=TRUE)  #calculate standard error of the mean of pCO2 for every 15 min interval
quarterly.tank.pCO2.high.mean <- aggregate(pCO2.High ~ Time, data=pCO2.M6, mean, na.rm=TRUE) #calculate mean of pCO2 for every 15 min interval
quarterly.tank.pCO2.high.se <- aggregate(pCO2.High ~ Time, data=pCO2.M6, std.error, na.rm=TRUE)  #calculate standard error of the mean of pCO2 for every 15 min interval
tank.pCO2.means.M6 <- data.frame(quarterly.tank.pCO2.amb.mean, quarterly.tank.pCO2.amb.se$pCO2.Amb, quarterly.tank.pCO2.high.mean$pCO2.High, quarterly.tank.pCO2.high.se$pCO2.High) #combine mean and standard error results
colnames(tank.pCO2.means.M6) <- c("Time", "Amb.mean", "Amb.se", "High.mean", "High.se") #Rename columns to describe contents
#plotting averages of total pCO2 every 15 min for a 1 day cycle from all data
Fig24 <- ggplot(tank.pCO2.means.M6) + #plot pCO2
geom_point(aes(x = Time, y = Amb.mean, colour="Ambient")) + #plot as line
geom_errorbar(aes(x=Time, ymax=Amb.mean+Amb.se, ymin=Amb.mean-Amb.se), position=position_dodge(0.9), data=tank.pCO2.means.M6) + #plot error bars
geom_point(aes(x = Time, y = High.mean, colour="High")) + #plot as line
geom_errorbar(aes(x=Time, ymax=High.mean+High.se, ymin=High.mean-High.se), position=position_dodge(0.9), data=tank.pCO2.means.M6) + #plot error bars
scale_colour_manual("Treatment", values = c("blue","red")) + #Set colors for treatments
scale_x_discrete(breaks=c("0:00", "06:00", "12:00", "18:00")) + #set discrete breaks on the X axis
ggtitle("F) Month 6 Larval Exposure") + #Label graph
xlab("Time") + #Label the X Axis
ylab(expression(paste('p',CO[2], ' (µatm)', sep=''))) + #Label the Y Axis
ylim(500,2600) + #set y axis limits
theme_bw() + #Set the background color
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), #Set the text angle
axis.line = element_line(color = 'black'), #Set the axes color
panel.border = element_blank(), #Set the border
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background =element_blank(), #Set the plot background
legend.key = element_blank(), #Set plot legend key
plot.title=element_text(hjust=0), #Justify the title to the top left
legend.position='none') #remove legend background
Fig24 #View figure
setwd(file.path(mainDir, 'Output'))
#Capture Figures to File
pdf("Fig2.Larval.release.pdf", width = 11, height = 6)
inset <- viewport(width = 0.22, height = 0.5, x = 0.85, y = 0.6)  # the inset in upper right
grid.newpage()
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
pushViewport(viewport(layout = grid.layout(1, 3)))
print(Fig25, vp = vplayout(1, 1))
print(Fig26, vp = vplayout(1, 2))
print(Fig27, vp = vplayout(1, 3))
print(Fig28, vp = inset)
dev.off()
pdf("Fig3.Larval.Performance.pdf", width = 11, height = 6)
grid.newpage()
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
pushViewport(viewport(layout = grid.layout(2, 3)))
print(Fig29, vp = vplayout(1, 1))
print(Fig30, vp = vplayout(1, 2))
print(Fig31, vp = vplayout(1, 3))
print(Fig32, vp = vplayout(2, 1))
print(Fig33, vp = vplayout(2, 2))
print(Fig34, vp = vplayout(2, 3))
dev.off()
FigureS1.Physical <- arrangeGrob(Fig2, Fig3,
Fig5, Fig7,
Fig9, Fig11,
Fig13, Fig15, ncol=2)
ggsave(file="FigS1.Physical_Experimental_Conditions.pdf", FigureS1.Physical, width =8.5, height = 11, units = c("in"))
FigureS2.Chemical <- arrangeGrob(Fig17, Fig18,
Fig20, Fig21,
Fig23, Fig24, ncol=2)
ggsave(file="FigS2.Chemical_Experimental_Conditions.pdf", FigureS2.Chemical, width =8.5, height = 11, units = c("in"))
setwd(file.path(mainDir, 'Data'))
grid.newpage()
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
pushViewport(viewport(layout = grid.layout(2, 3)))
grid.rect(x = unit(0.5, "npc"), y = unit(0.5, "npc"),
width = unit(1, "npc"), height = unit(1, "npc"),
just = "centre", hjust = NULL, vjust = NULL,
default.units = "npc", name = NULL,
gp=gpar(), draw = TRUE, vp = NULL)
print(Fig29, vp = vplayout(1, 1))
print(Fig30, vp = vplayout(1, 2))
print(Fig31, vp = vplayout(1, 3))
print(Fig32, vp = vplayout(2, 1))
print(Fig33, vp = vplayout(2, 2))
print(Fig34, vp = vplayout(2, 3))
grid.newpage()
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
pushViewport(viewport(layout = grid.layout(2, 3)))
print(Fig29, vp = vplayout(1, 1))
print(Fig30, vp = vplayout(1, 2))
print(Fig31, vp = vplayout(1, 3))
print(Fig32, vp = vplayout(2, 1))
print(Fig33, vp = vplayout(2, 2))
print(Fig34, vp = vplayout(2, 3))
sur.RM <-  lme(Alive ~ Origin*Secondary*Timepoint, random = ~ Timepoint|Chamber, data=All.Survivorship) #repeated measures ANOVA with random intercept but not slope (clonal fragments expect to respond the same)
summary(sur.RM)
anova(sur.RM)
x.RM <-  lme(Alive ~ Origin*Secondary*Timepoint, random = ~ Chamber, data=All.Survivorship) #repeated measures ANOVA with random intercept but not slope
summary(x.RM)
anova(x.RM)
sur.RM.posthoc <- lsmeans(sur.RM, specs=c("Timepoint","Origin","Secondary")) #calculate MS means
sur.RM.posthoc #view results
sur.RM.posthoc.p <- contrast(sur.RM.posthoc, method="pairwise", by=c("Timepoint")) #contrast treatment groups within a species at each time point
sur.RM.posthoc.p #view results
sur.RM.posthoc.lett <- cld(sur.RM.posthoc , alpha=.05, Letters=letters) #identify posthoc letter differences
sur.RM.posthoc.lett #view results
?lsmeans
sur.RM.posthoc
?contrast
?cld
